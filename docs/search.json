[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About this blog",
    "section": "",
    "text": "Hi!\nMy name is Carlo and I teach political science, including data analysis, at the University of Stavanger in Norway.\nI often find that students have quite smart ideas that they want to test in a course paper or thesis project and which could be tested with a relatively simple quantitative analysis – but they don’t quite know how to actually go about this (and might be intimidated by quantitative methods).\nThe aim of this blog is to show students (in the social sciences so far) how they can test big ideas – e.g., about the role of class, social norms, or gender – with relatively simple methods that they should be familiar with from their introductory statistics course and with the free and open-source R statistical programming language.\nThe posts are very much focussed on explaining the general logic of an analysis and assume that readers are at least a bit familiar with basic statistics and data analysis methods and how to do them in R (mainly; some posts also use other languages such as Javascript). Each post also gives pointers to more advanced resources (textbooks, journal articles) on quantitative methods."
  },
  {
    "objectID": "posts/globalization/index.html",
    "href": "posts/globalization/index.html",
    "title": "How vulnerable are workers to globalization (and what effects does this have)?",
    "section": "",
    "text": "‘Globalization destroys jobs’ or similar statements are often made by politicians or business and labor leaders, especially when new trade agreements are in the process of being negotiated. And indeed, even though free trade is generally beneficial to countries’ economies as a whole, there are usually some workers who are negatively affected by increased competition from abroad (Autor, Dorn, and Hanson 2013; Heckscher 1919; Ohlin 1933). These negative economic effects can then also have further political and social effects, for example in the form of increased demands for social protection (Walter 2010), increased political polarization and conflict (Autor et al. 2020), and rising rates of divorce and out-of-wedlock births (Anelli, Giuntella, and Stella 2024).\nTo be able to study these (and potentially other) effects, researchers obviously need some of measurement of how exposed and vulnerable workers are to the negative effects of trade and international competition. One way to measure this is with indicators of ‘offshoreability’ — how easy or difficult is it to move the work done by people in different occupations to other countries? Different such indicators have been developed, but one that is relatively widely used are the indicators of offshoreability by Blinder & Krueger (2013). They use a survey-based approach, where they ask workers about their perceptions of how easy it would be to move their jobs abroad and confirm this with a second survey of experts.\nThe rest of this post will show you how you can access the data, import them into R, and merge them with data from round 7 (2014) of the European Social Survey so that you can analyze how vulnerability to globalization affects people’s attitudes and behavior."
  },
  {
    "objectID": "posts/globalization/index.html#the-losers-of-globalization-and-trade",
    "href": "posts/globalization/index.html#the-losers-of-globalization-and-trade",
    "title": "How vulnerable are workers to globalization (and what effects does this have)?",
    "section": "",
    "text": "‘Globalization destroys jobs’ or similar statements are often made by politicians or business and labor leaders, especially when new trade agreements are in the process of being negotiated. And indeed, even though free trade is generally beneficial to countries’ economies as a whole, there are usually some workers who are negatively affected by increased competition from abroad (Autor, Dorn, and Hanson 2013; Heckscher 1919; Ohlin 1933). These negative economic effects can then also have further political and social effects, for example in the form of increased demands for social protection (Walter 2010), increased political polarization and conflict (Autor et al. 2020), and rising rates of divorce and out-of-wedlock births (Anelli, Giuntella, and Stella 2024).\nTo be able to study these (and potentially other) effects, researchers obviously need some of measurement of how exposed and vulnerable workers are to the negative effects of trade and international competition. One way to measure this is with indicators of ‘offshoreability’ — how easy or difficult is it to move the work done by people in different occupations to other countries? Different such indicators have been developed, but one that is relatively widely used are the indicators of offshoreability by Blinder & Krueger (2013). They use a survey-based approach, where they ask workers about their perceptions of how easy it would be to move their jobs abroad and confirm this with a second survey of experts.\nThe rest of this post will show you how you can access the data, import them into R, and merge them with data from round 7 (2014) of the European Social Survey so that you can analyze how vulnerability to globalization affects people’s attitudes and behavior."
  },
  {
    "objectID": "posts/globalization/index.html#accessing-the-data",
    "href": "posts/globalization/index.html#accessing-the-data",
    "title": "How vulnerable are workers to globalization (and what effects does this have)?",
    "section": "Accessing the data",
    "text": "Accessing the data\nLuckily, the Blinder/Krueger data are publicly available as part of the replication data package of a second (important) research article, which compares the effects of globalization and technological change on workers (Goos, Manning, and Salomons 2014). Goos et al. have archived the research data they use in the ICPSR Data Archive: https://doi.org/10.3886/E112846V1. There, under Data, is the task.dta dataset, which contains the offshoreability scores and, as a bonus, also additional scores on how exposed workers are to losing their jobs to robots and other automated technology Thewissen and Rueda (2019). You can download the dataset for free, after a quick login."
  },
  {
    "objectID": "posts/globalization/index.html#importing-and-merging-the-data-with-ess-data",
    "href": "posts/globalization/index.html#importing-and-merging-the-data-with-ess-data",
    "title": "How vulnerable are workers to globalization (and what effects does this have)?",
    "section": "Importing and merging the data with ESS data",
    "text": "Importing and merging the data with ESS data\n\nPreparation\nMerging the data with ESS survey data is not as difficult as it might seem. The first step is to make sure that you also have access to ESS data (which can be downloaded for free from europeansocialsurvey.org), and that both datasets are stored in your current working directly (“folder”) so that R can directly find and import them. As mentioned above, the example here uses data from the 7th ESS round, so if you do not already have the data on your computer, quickly download them (in Stata/.dta format).\nIn R, we first load the tidyverse because it contains functions that we need to be able to work with and visualize the data. I am also setting the ggplot theme to classic:\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ntheme_set(theme_classic())\n\n\n\nData import\nThen we first import the ESS dataset with haven:\n\ness7 &lt;- haven::read_dta(\"ess7.dta\")\n\nThe ESS is quite big, so to make things easier we select only a few variables that we want to work with:\n\ness7 %&gt;% \n  select(idno,cntry,essround,isco08,gndr,agea,trstplt) -&gt; ess7\n\n\nidno and essround are “administrative” variables that are always good to keep\ncntry designates which country a given respondent comes from, and this one should always be kept\nisco08 is the respondents’ occupation as measured by the 2008 version of the International Standard Classification of Occupations (ISCO; see also the other post on measuring class). This variable is important because we will use it to link the ESS data with the vulnerability indicator data\nagea, gndr, and trstplt measure the respondents’ age, gender, and their trust in politicans (on a 0-10 scale)\n\nNext, we import the vulnerability indicator scores:\n\nscores &lt;- haven::read_dta(\"task.dta\")\n\n\n\nA quick exploration\nIt is time to take a quick look at the data to get a sense of what we are working with:\n\nhead(scores)\n\n# A tibble: 6 × 7\n  occupation           RTI_alm_isco_77     BK OFF1_ffl OFF2_ffl OFF3_ffl OFF_gms\n  &lt;dbl+lbl&gt;                      &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;\n1 12 [Corporate manag…          -0.747 -0.320   -1.43     0.798   -1.66   -0.593\n2 13 [Managers of sma…          -1.52  -0.634   -0.937    0.265   -1.19   -0.593\n3 21 [Physical, mathe…          -0.822  1.05     0.390    0.798   -1.48   -0.375\n4 22 [Life science an…          -1.00  -0.758   -1.92     0.544   -1.70   -0.639\n5 24 [Other professio…          -0.732  0.212   -0.892    1.56    -1.18   -0.513\n6 31 [Physical, mathe…          -0.397 -0.123    0.116   -0.393   -0.433  -0.272\n\n\nYou might notice that every row in the dataset is an occupation: Row #1 is “Corporate managers”, row #2 is “Managers of small enterprises”, and so on. The first column (or variable) indicates the title of the occupation and a 2-digit code based on the 1988 version of the International Standard Classifiation of Occupations (ISCO) classification, where “Corporate managers” have the code 12.1 The other variables are different indicators of vulnerability:\n\nRTI_alm_isco_77 is an indicator of vulnerability to automation (“routine task intensity”) that was developed by Autor, Levy, and Murnane (2003);\nBK is the indicator of offshoreability by Blinder & Krueger (2013);\nOFF1_ffl to OFF3_ffl are alternative indicators of offshoreability by Firpo et al. (see their paper for details: Firpo, Fortin, and Lemieux 2011);\nOFF_gms is the BK indicator in a normalized (“rescaled”) version;\n\nLet’s take a closer look at the BK indicator:\n\nsummary(scores$BK)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n-0.9985 -0.7585 -0.3203  0.0000  0.3996  2.3458 \n\n\nThe indicator ranges from (almost) -1 to 2.35 and is centered on 0. Maybe more interesting is to see which occupations are particularly exposed to globalization. To see that, we reorder the data from the highest to lowest BK score and let R display the five highest-scoring occupations:\n\nscores %&gt;% \n  arrange(-BK) %&gt;% \n  head()\n\n# A tibble: 6 × 7\n  occupation            RTI_alm_isco_77    BK OFF1_ffl OFF2_ffl OFF3_ffl OFF_gms\n  &lt;dbl+lbl&gt;                       &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;\n1 82 [Machine operator…           0.493 2.35     1.66    -1.02   0.993     3.18 \n2 73 [Precision, handi…           1.59  1.66     0.585   -0.564  0.00830  -0.616\n3 81 [Stationary plant…           0.323 1.59     0.990   -1.41   0.306     1.63 \n4 74 [Other craft and …           1.24  1.15     1.49    -0.453  1.07     -0.272\n5 21 [Physical, mathem…          -0.822 1.05     0.390    0.798 -1.48     -0.375\n6 41 [Office clerks]              2.24  0.400    0.301    1.26   0.913     1.21 \n\n\nEvidently, typical manual or industrial occupations are the most vulnerable to globalization, but so are physicists and mathematicians!\nJust to complete the picture, we also look at the least exposed occupations:\n\nscores %&gt;% \n  arrange(BK) %&gt;% \n  head()\n\n# A tibble: 6 × 7\n  occupation           RTI_alm_isco_77     BK OFF1_ffl OFF2_ffl OFF3_ffl OFF_gms\n  &lt;dbl+lbl&gt;                      &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;\n1 83 [Drivers and mob…         -1.50   -0.999   0.399   -1.37     0.703   -0.628\n2 51 [Personal and pr…         -0.598  -0.937  -0.910    0.312    0.240   -0.639\n3 71 [Extraction and …         -0.185  -0.934   0.603   -1.23     0.0133  -0.593\n4 52 [Models, salespe…          0.0534 -0.893   0.0565   0.913    1.34    -0.639\n5 91 [Sales and servi…          0.0274 -0.808   0.729    0.0522   1.52    -0.375\n6 22 [Life science an…         -1.00   -0.758  -1.92     0.544   -1.70    -0.639\n\n\nHere, it is again some manual workers (e.g., drivers and builders) that top the list (or, rather, are at the bottom). However, salespersons and medical professionals, who obviously cannot do their jobs from abroad, also have low exposure to globalization.\n\n\nAdjusting the ISCO scores\nAs mentioned, the vulnerability score data are based on the ISCO-88 occupational classification, which is an older version of the ISCO-08 classifcation that is used to measure the occupation of ESS respondents. In addition, you may have noticed that the ISCO-scores in the ESS data have four numbers while those in the vulnerability data have two. The latter is because the vulnerability data use a simplified or less fine-grained version of the ISCO classification.\nThis means that to be able to merge the two datasets, we need to make sure that both use the same ISCO-classification so that we can match the different occupations, and that they are measured at the same level of detail.\nFortunately, there are methods to convert the scores back and forth between the different versions of the ISCO classification, and one of these is the occupar package (similar to the DIGCLASS package that is used in the the other post on measuring class). In case you do not already have it installed, you can do so by running the following in your Console:\n\nremotes::install_github(\"DiogoFerrari/occupar\")\n\nTechnically, we could either adjust the ISCO-08 scores in the ESS to match the ISCO-88 scores used in the other dataset, or the other way around, and the occupar package has functions to do both. The only important thing is that both datasets contain the same version of the ISCO classication.\nWe will use the isco08to88() function which, as the name suggests, converts ISCO-08 scores in the ESS to ISCO-88 scores, so that we can then match the ESS data and the vulnerability indicators along these scores and merge the two datasets. This function needs the numerical ISCO scores (not the titles of the occupations but the associated numbers).\nThis means that we need to extract the numerical scores from the ISCO-08 variable in the ESS. The following code does this and stores the converted scores into a new variable:\n\ness7 %&gt;% \n  mutate(isco08_scores = as.numeric(isco08)) -&gt; ess7\n\nWe can take a quick look at the data to see if the conversion worked:\n\nhead(ess7)\n\n# A tibble: 6 × 8\n   idno cntry essround isco08                gndr    agea  trstplt isco08_scores\n  &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl+lbl&gt;             &lt;dbl+l&gt; &lt;dbl&gt; &lt;dbl+l&gt;         &lt;dbl&gt;\n1     1 AT           7  7126 [Plumbers and … 1 [Mal… 51    3 [3]            7126\n2     2 AT           7  8312 [Railway brake… 1 [Mal… 67    3 [3]            8312\n3     3 AT           7 NA(a) [Not applicabl… 2 [Fem… 89    3 [3]              NA\n4     4 AT           7  7223 [Metal working… 1 [Mal… 32    0 [No …          7223\n5     5 AT           7  9321 [Hand packers]  2 [Fem… 56    0 [No …          9321\n6     6 AT           7  9321 [Hand packers]  2 [Fem… 67    0 [No …          9321\n\n\nIndeed, the function worked as intended. For example, it correctly extracted the ISCO-08 score 7126 for the “plumber” in row #1 and saved it as 7126 in the new variable.\nThis means we can now convert the new scores to the ISCO-88 classification:\n\ness7 %&gt;% \n  mutate(isco88 = occupar::isco08to88(isco08_scores)) -&gt; ess7\n\nIf we take another quick look at the dataset, you can see the new ISCO-88 scores in the last column; you may also notice that the scores are slightly different (for example, 9321 in the ISCO-08 classification is 9322 in the old one):\n\nhead(ess7)\n\n# A tibble: 6 × 9\n   idno cntry essround isco08         gndr    agea  trstplt isco08_scores isco88\n  &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl+lbl&gt;      &lt;dbl+l&gt; &lt;dbl&gt; &lt;dbl+l&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n1     1 AT           7  7126 [Plumbe… 1 [Mal… 51    3 [3]            7126   7136\n2     2 AT           7  8312 [Railwa… 1 [Mal… 67    3 [3]            8312   8312\n3     3 AT           7 NA(a) [Not ap… 2 [Fem… 89    3 [3]              NA     NA\n4     4 AT           7  7223 [Metal … 1 [Mal… 32    0 [No …          7223   7223\n5     5 AT           7  9321 [Hand p… 2 [Fem… 56    0 [No …          9321   9322\n6     6 AT           7  9321 [Hand p… 2 [Fem… 67    0 [No …          9321   9322\n\n\nThe almost last step in the data preparation is to “simplify” the new ISCO-88 scores in the ESS data to the same level of detail that the vulnerability data have. This is relatively easy, we simply “extract” the first two numbers of the four-number ISCO-scores.2 The following code does that:\n\ness7 %&gt;% \n  mutate(isco88_2d = as.numeric(substr(as.character(isco88), 1,2))) -&gt; ess7\n\nIn human language, this code first converts the isco88 variable to text (as.character()), then uses substr() to extract the first two items (“from 1 to 2”), and then converts the result back to numbers with as.numeric().\nIf we take a look at the final result (with variables re-arranged so that we can see them next to each other), we can confirm that all worked as it should:\n\ness7 %&gt;% \n  relocate(idno,cntry,essround,isco08,isco88,isco88_2d) %&gt;% \n  head()\n\n# A tibble: 6 × 10\n   idno cntry essround isco08             isco88 isco88_2d gndr    agea  trstplt\n  &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl+lbl&gt;           &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl+l&gt; &lt;dbl&gt; &lt;dbl+l&gt;\n1     1 AT           7  7126 [Plumbers a…   7136        71 1 [Mal… 51    3 [3]  \n2     2 AT           7  8312 [Railway br…   8312        83 1 [Mal… 67    3 [3]  \n3     3 AT           7 NA(a) [Not applic…     NA        NA 2 [Fem… 89    3 [3]  \n4     4 AT           7  7223 [Metal work…   7223        72 1 [Mal… 32    0 [No …\n5     5 AT           7  9321 [Hand packe…   9322        93 2 [Fem… 56    0 [No …\n6     6 AT           7  9321 [Hand packe…   9322        93 2 [Fem… 67    0 [No …\n# ℹ 1 more variable: isco08_scores &lt;dbl&gt;\n\n\nFinally, we quickly convert the ISCO-88 scores in the vulnerability dataset to a pure numerical score. We also give it the same name as the corresponding variable in the ESS dataset to make merging the two datasets more straightforward:\n\nscores %&gt;% \n  mutate(isco88_2d = as.numeric(occupation)) -&gt; scores\n\n\n\nMerging the datasets\nMerging two datasets can seem a bit daunting to beginners, but it is actually quite easy. The dplyr package has functions for so-called “mutating joins” (see https://dplyr.tidyverse.org/reference/mutate-joins.html), which in essence simply merge two datasets along one (or potentially more) “identifier” variable. As long as one has one (or more) variables that can directly match observations between datasets – which in our case is the two-number ISCO-88 score – one can use these functions to merge two datasets.\nUsually, the correct function to use to merge datasets is left_join(). In our case, we want to join the ESS dataset with the vulnerability scores dataset along the two-digit ISCO-88 scores, so we specify this in our code:\n\ness7 %&gt;% \n  left_join(scores, by = \"isco88_2d\") -&gt; ess7\n\nAnd that is it.\nIf we take a look at the relevant variables in the final dataset, we can see the vulnerability scores matched to the ESS data:\n\ness7 %&gt;% \n  select(idno,isco08,isco88_2d,BK,RTI_alm_isco_77) %&gt;% \n  head()\n\n# A tibble: 6 × 5\n   idno isco08                                  isco88_2d     BK RTI_alm_isco_77\n  &lt;dbl&gt; &lt;dbl+lbl&gt;                                   &lt;dbl&gt;  &lt;dbl&gt;           &lt;dbl&gt;\n1     1  7126 [Plumbers and pipe fitters]              71 -0.934          -0.185\n2     2  8312 [Railway brake, signal and switc…        83 -0.999          -1.50 \n3     3 NA(a) [Not applicable]                         NA NA              NA    \n4     4  7223 [Metal working machine tool sett…        72 -0.451           0.457\n5     5  9321 [Hand packers]                           93 -0.658           0.449\n6     6  9321 [Hand packers]                           93 -0.658           0.449\n\n\nYou see that respondent with ID number 1 (the plumber) has a BK offshorability score of -9.34 and also an automation-vulnerability (RTI) score of -0.185.\nAs a last step, we convert the final dataset to the traditional R format so that it is easier to work with later:\n\ness7 &lt;- labelled::unlabelled(ess7)"
  },
  {
    "objectID": "posts/globalization/index.html#vulnerability-to-globalization-gender-age-and-political-trust",
    "href": "posts/globalization/index.html#vulnerability-to-globalization-gender-age-and-political-trust",
    "title": "How vulnerable are workers to globalization (and what effects does this have)?",
    "section": "Vulnerability to globalization, gender, age, and political trust",
    "text": "Vulnerability to globalization, gender, age, and political trust\nWith the merged data in hand, we can now do lots of different analyses. For example, we could use the vulnerabiility scores in a regression analysis to see if they are related to some other variable. Just to illustrate this, we will do a few quick visual analyses of the relationships between the offshoreability scores and gender, age, and political trust.\nFor example, let’s see if men or women are on average more exposed to globalization:\n\ness7 %&gt;% \n  group_by(gndr) %&gt;% \n  summarise(avg_BK = mean(BK, na.rm = T)) %&gt;% \n  drop_na() %&gt;%\n  ggplot(aes(x = gndr, y = avg_BK)) +\n    geom_col()\n\n\n\n\n\n\n\n\nThere is only a tiny difference: Women are very slightly less exposed to globalization than men.\nNext, we can see if there is a relation to age. To do that, we can calculate the average age in a given occupation and relate that average age to the vulnerability score in a scatterplot:\n\ness7 %&gt;% \n  group_by(isco88_2d) %&gt;% \n  summarise(avg_age = mean(agea, na.rm = T),\n            avg_BK = mean(BK, na.rm = T)) %&gt;% \n  drop_na() %&gt;% \n  ggplot(aes(x = avg_age, y = avg_BK)) +\n    geom_point() +\n    geom_smooth(method = \"lm\", color = \"grey\", linetype = \"dashed\", se = F)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nThere does seem to be a positive relationship: Occupations where workers are older are also more exposed to globalization.\nFinally, let’s see if exposure to globalization has political effects by testing if there is a relationship to trust in politicians. We do this with a box plot:\n\ness7 %&gt;% \n  ggplot(aes(x = trstplt, y = BK)) +\n    geom_boxplot()\n\nWarning: Removed 8011 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\nAt least based on this (admittedly) very quick and superficial look at the data, there does not seem to be a strong relationship."
  },
  {
    "objectID": "posts/globalization/index.html#next-steps",
    "href": "posts/globalization/index.html#next-steps",
    "title": "How vulnerable are workers to globalization (and what effects does this have)?",
    "section": "Next steps",
    "text": "Next steps\nEven if there is not link to political trust, maybe you can think of other variables that are measured in the ESS that globalization vulnerability could have an effect on? And maybe you can even think of macro-level variables that could make these effects stronger or weaker (and then use the other post to compare the effects of globalization vulnerability between two or more selected countries)?\nFinally, you can also merge the vulnerability scores to other survey datasets such as the ISSP or the Eurobarometer so long as the survey dataset contains ISCO occupation scores."
  },
  {
    "objectID": "posts/globalization/index.html#footnotes",
    "href": "posts/globalization/index.html#footnotes",
    "title": "How vulnerable are workers to globalization (and what effects does this have)?",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSee https://ilostat.ilo.org/methods/concepts-and-definitions/classification-occupation/ for details on the ISCO classification.↩︎\nThis works because the numbers reflect the hierarchical structure of the ISCO classification. If we cut off the last two numbers, we get to a higher level of aggregation. See https://ilostat.ilo.org/methods/concepts-and-definitions/classification-occupation/#elementor-toc__heading-anchor-2 for details.↩︎"
  },
  {
    "objectID": "posts/compa_survey/index.html",
    "href": "posts/compa_survey/index.html",
    "title": "Comparing people’s behavior and attitudes across countries",
    "section": "",
    "text": "How much are people’s opinions, behaviors, or perceptions affected by the environments (or “macro-level contexts”) they live in? Many sociologists argue that societal norms shape people’s behavior (e.g., that men do more of the housework in societies with egalitarian gender norms), and political scientists similarly suggest that political institutions influence political attitudes and behavior (e.g., that people participate more in elections in proportional or majoritarian electoral systems).\nTo test these types of theories, one needs to compare people’s opinions or behavior across contexts with different social norms, political institutions, or other macro-level factors that might have an influence on people. This is usually done with comparative survey data such as data from the European Social Survey, the International Social Survey Program, the Eurobarometer, the OECD Risks that Matter survey, or the World Values Study.1 The big advantage that comparative survey data offer is that they are standardized: The same survey with the exact same questions is conducted in multiple countries at the same time, so that people’s responses to the questions – i.e., their attitudes or behavior – can be directly compared.2 This means that one can use these survey data to find out for macro-level environmental factors influence (or at least are correlated with) people’s individual behaviors and attitudes.\nThis type of analysis can seem daunting to students but – as always in life – there are easier and more complicated ways of doing this. This post shows you how to do it in the easiest way possible, using R and techniques that undergraduate students usually learn in their introductory statistics courses: Descriptive statistics and linear regression models (taking inspiration from Blekesaune and Bjørkhaug 2021).\nSimply put (TL;DR), you pick a comparative survey dataset that contains relevant variables and covers countries that differ in relevant ways. For example, to study the effects of gender norms on the household division of work, you would find a survey dataset that contains questions about how much time people spend on housework and which covers countries with very egalitarian gender norms and countries with very inegalitarian gender norms. Then you pick one country that has, based on other studies or datasets, egalitarian norms and one that has very inegalitarian norms and you analyze how couples divide household chores between them (see e.g., Iversen and Rosenbluth 2006). Ideally, the countries you pick are otherwise as similar as possible so that you can be more sure that any differences you find are really the result of gender norms and not other factors (see e.g., Ringdal 2018, chap. 9; King, Keohane, and Verba 1994; Landman 2003, chaps. 2–3 for an explanation of good case selection strategies).\nThematically, we stick to the general topic of gender and gender differences, but we do not look at household work. Instead, we look at the political gender gap: How men and women differ in their political opinions (Inglehart and Norris 2000; Iversen and Rosenbluth 2010, 2006). More specifically, we do a simple re-test of the “household bargaining theory” of political gender differences by Iversen & Rosenbluth (2006, 2010)."
  },
  {
    "objectID": "posts/compa_survey/index.html#are-people-influenced-by-the-environments-they-live-in",
    "href": "posts/compa_survey/index.html#are-people-influenced-by-the-environments-they-live-in",
    "title": "Comparing people’s behavior and attitudes across countries",
    "section": "",
    "text": "How much are people’s opinions, behaviors, or perceptions affected by the environments (or “macro-level contexts”) they live in? Many sociologists argue that societal norms shape people’s behavior (e.g., that men do more of the housework in societies with egalitarian gender norms), and political scientists similarly suggest that political institutions influence political attitudes and behavior (e.g., that people participate more in elections in proportional or majoritarian electoral systems).\nTo test these types of theories, one needs to compare people’s opinions or behavior across contexts with different social norms, political institutions, or other macro-level factors that might have an influence on people. This is usually done with comparative survey data such as data from the European Social Survey, the International Social Survey Program, the Eurobarometer, the OECD Risks that Matter survey, or the World Values Study.1 The big advantage that comparative survey data offer is that they are standardized: The same survey with the exact same questions is conducted in multiple countries at the same time, so that people’s responses to the questions – i.e., their attitudes or behavior – can be directly compared.2 This means that one can use these survey data to find out for macro-level environmental factors influence (or at least are correlated with) people’s individual behaviors and attitudes.\nThis type of analysis can seem daunting to students but – as always in life – there are easier and more complicated ways of doing this. This post shows you how to do it in the easiest way possible, using R and techniques that undergraduate students usually learn in their introductory statistics courses: Descriptive statistics and linear regression models (taking inspiration from Blekesaune and Bjørkhaug 2021).\nSimply put (TL;DR), you pick a comparative survey dataset that contains relevant variables and covers countries that differ in relevant ways. For example, to study the effects of gender norms on the household division of work, you would find a survey dataset that contains questions about how much time people spend on housework and which covers countries with very egalitarian gender norms and countries with very inegalitarian gender norms. Then you pick one country that has, based on other studies or datasets, egalitarian norms and one that has very inegalitarian norms and you analyze how couples divide household chores between them (see e.g., Iversen and Rosenbluth 2006). Ideally, the countries you pick are otherwise as similar as possible so that you can be more sure that any differences you find are really the result of gender norms and not other factors (see e.g., Ringdal 2018, chap. 9; King, Keohane, and Verba 1994; Landman 2003, chaps. 2–3 for an explanation of good case selection strategies).\nThematically, we stick to the general topic of gender and gender differences, but we do not look at household work. Instead, we look at the political gender gap: How men and women differ in their political opinions (Inglehart and Norris 2000; Iversen and Rosenbluth 2010, 2006). More specifically, we do a simple re-test of the “household bargaining theory” of political gender differences by Iversen & Rosenbluth (2006, 2010)."
  },
  {
    "objectID": "posts/compa_survey/index.html#the-iversenrosenbluth-hypothesis-in-the-smallest-of-nutshells",
    "href": "posts/compa_survey/index.html#the-iversenrosenbluth-hypothesis-in-the-smallest-of-nutshells",
    "title": "Comparing people’s behavior and attitudes across countries",
    "section": "The Iversen/Rosenbluth hypothesis in the smallest of nutshells",
    "text": "The Iversen/Rosenbluth hypothesis in the smallest of nutshells\nVery (very) simply put, Iversen & Rosenbluth (2006, 2010) argue that women are politically to the left of men, other things equal, but also that this depends on macro-level factors – specifically on how countries’ economies are structured. In countries that have economies that rely strongly on specific skills (think: highly trained craftsmen and -women that are really good at a few specific tasks), this gap should be particularly large. In contrast, in countries that rely more on general skills (think: flexible professionals that can quickly switch between jobs), women and men should be more equal in their political opinions."
  },
  {
    "objectID": "posts/compa_survey/index.html#re-analysis-using-ess-data",
    "href": "posts/compa_survey/index.html#re-analysis-using-ess-data",
    "title": "Comparing people’s behavior and attitudes across countries",
    "section": "Re-analysis using ESS data",
    "text": "Re-analysis using ESS data\nWe do a new test of this hypothesis using data from the tenth (2018) round of the European Social Survey (ESS).\nOut of all the countries covered by this round of the ESS, we select the following two countries based on information we have from Iversen & Rosenbluth (2006), but also other studies (Hall and Soskice 2001; Iversen and Soskice 2001):\n\nIreland, which is known to rely strongly on general skills. Here, we expect a small gender gap.\nNorway, which relies on specific skills. Here, we expect a large gender gap.\n\nWe use the following micro-level variables from the ESS:\n\nLeft-right ideology (lrscale). This is measures people’s general political orientation and is the dependent variable.\nGender (gndr; male/female). This is the central independent variable here.\nHousehold income (hinctnta): This is a relevant control variable.\nAge (agea; years): Also a control variable.\nEducation (eduyrs): A final variable we want to control for.\n\n\nPackages\nWe use the tidyverse for data management & visualization and texreg to present regression results:\n\nlibrary(tidyverse)\nlibrary(texreg)\n\n\n\nSet theme for graphs\nThe classic theme just looks better…\n\ntheme_set(theme_classic())\n\n\n\nData import\nYou can download the data for free (after a registration) from https://www.europeansocialsurvey.org/. I use the .dta (Stata) version and saved the dataset as ESS10.dta on my computer. I use the haven package to import the dataset, and then immediately convert the dataset to the traditional R format with labelled::unlabelled (to be able to do this, you need to have both of these packages installed. Loading them with library() is not necessary).\n\ness &lt;- labelled::unlabelled(haven::read_dta(\"ESS10.dta\"))\n\n\n\nTrimming\nThe entire ESS is massive. To make things easier to handle, we select only the relevant variables (plus some useful “administrative” ones such as idno, essround, and cntry):\n\ness %&gt;% \n  select(idno,essround,cntry,lrscale,gndr,agea,eduyrs,hinctnta) -&gt; ess\n\n\n\nData cleaning\nHousehold income (hinctnta) and left-right self-placement (lrscale) are factors and need to be correctly converted to numeric before we can use them in a regression analysis:\n\nclass(ess$hinctnta)\n\n[1] \"factor\"\n\nclass(ess$lrscale)\n\n[1] \"factor\"\n\nbst290::visfactor(dataset = ess,\n                  variable = \"hinctnta\") # no label/value divergence, no adjustment needed\n\n values          labels\n      1  J - 1st decile\n      2  R - 2nd decile\n      3  C - 3rd decile\n      4  M - 4th decile\n      5  F - 5th decile\n      6  S - 6th decile\n      7  K - 7th decile\n      8  P - 8th decile\n      9  D - 9th decile\n     10 H - 10th decile\n\nbst290::visfactor(dataset = ess,\n                  variable = \"lrscale\") # labels/values are off by 1, needs to be adjusted\n\n values labels\n      1   Left\n      2      1\n      3      2\n      4      3\n      5      4\n      6      5\n      7      6\n      8      7\n      9      8\n     10      9\n     11  Right\n\ness %&gt;% \n  mutate(hhinc = as.numeric(hinctnta),\n         lrscale = as.numeric(lrscale) - 1) -&gt; ess\n\n\n\nCountry selection\nThe final “trimming” operation we need to do is to select only the two countries we want to compare. This is easy to do with filter(), and we create separate datasets for each of the two countries:\n\nunique(ess$cntry)\n\n [1] \"BE\" \"BG\" \"CH\" \"CZ\" \"EE\" \"FI\" \"FR\" \"GB\" \"GR\" \"HR\" \"HU\" \"IE\" \"IS\" \"IT\" \"LT\"\n[16] \"ME\" \"MK\" \"NL\" \"NO\" \"PT\" \"SI\" \"SK\"\n\ness %&gt;% \n  filter(cntry==\"NO\") -&gt; norway\n\ness %&gt;% \n  filter(cntry==\"IE\") -&gt; ireland\n\n\n\nDescriptive analysis of political gender gaps by country\nIt is good practice to first do a bit of visual analysis to get a sense of how the data look before moving to more complicated statistical analyses. Here, we use a bit of dplyr (group_by() & summarize()) to calculate the political gender gap in each country – how men and women differ, on average, in their ideology – and then visualize the result with a ggplot() bar graph.\nireland %&gt;%\n  group_by(gndr) %&gt;% \n  summarise(avg_lr = mean(lrscale, na.rm = T)) %&gt;% \n  ggplot(aes(x = gndr, y = avg_lr)) +\n    geom_bar(stat = \"identity\") +\n    geom_text(aes(label = round(avg_lr, digits = 1)), vjust = -.5) +\n    scale_y_continuous(limits = c(0,6)) +\n    labs(x = \"Gender\", y = \"Average left-right placement\",\n         caption = \"Higher scores = more conservative\",\n         title = \"Ireland\")\nnorway %&gt;%\n  group_by(gndr) %&gt;% \n  summarise(avg_lr = mean(lrscale, na.rm = T)) %&gt;% \n  ggplot(aes(x = gndr, y = avg_lr)) +\n    geom_bar(stat = \"identity\") +\n    geom_text(aes(label = round(avg_lr, digits = 1)), vjust = -.5) +\n    scale_y_continuous(limits = c(0,6)) +\n    labs(x = \"Gender\", y = \"Average left-right placement\",\n         caption = \"Higher scores = more conservative\",\n         title = \"Norway\")\n\n\n\n\n\n\n\n\n\n\nIt looks like the data support the hypothesis. We expected a small ideological gap between men and women in Ireland, and that is what we find: Men and women hardly differ on average in their left-right orientation (5.3 - 5.2 = 0.1). In contrast, this difference is four times as large (5.2 - 4.8 = 0.4), which is what we would have expected.\n\n\nRegression analysis\nWhile the visual analysis is useful, we also need to do a more thorough test where we control for other variables. To do that, we do a simple linear (OLS) regression analysis separately for each country:\n\n# Baseline model\nno_mod1 &lt;- lm(lrscale ~ gndr,\n               data = norway)\n\n# With controls\nno_mod2 &lt;- lm(lrscale ~ gndr + agea + eduyrs + hhinc,\n               data = norway)\n\n# Baseline model\nie_mod1 &lt;- lm(lrscale ~ gndr,\n               data = ireland)\n\n# With controls\nie_mod2 &lt;- lm(lrscale ~ gndr + agea + eduyrs + hhinc,\n               data = ireland)\n\nWe use screenreg() from the texreg package to show the results directly next to each other so that we can spot differences between the two countries more easily:\n\nscreenreg(list(no_mod1,no_mod2,ie_mod1,ie_mod2),\n          stars = 0.05,\n          custom.header = list(\"Norway\" = 1:2, \"Ireland\" = 3:4),\n          custom.model.names = c(\"No controls\",\"Controls\",\n                                 \"No controls\",\"Controls\"),\n          custom.coef.map = list(\"(Intercept)\" = \"Intercept\",\n                                 \"gndrFemale\" = \"Female\",\n                                 \"agea\" = \"Age\",\n                                 \"eduyrs\" = \"Education (years)\",\n                                 \"hhinc\" = \"Household income (deciles)\"))\n\n\n=========================================================================\n                                    Norway                 Ireland       \n                            ----------------------  ---------------------\n                            No controls  Controls   No controls  Controls\n-------------------------------------------------------------------------\nIntercept                      5.21 *       5.41 *     5.26 *      4.61 *\n                              (0.09)       (0.35)     (0.08)      (0.38) \nFemale                        -0.41 *      -0.38 *    -0.02       -0.03  \n                              (0.13)       (0.13)     (0.11)      (0.13) \nAge                                         0.01 *                 0.02 *\n                                           (0.00)                 (0.00) \nEducation (years)                          -0.10 *                -0.01  \n                                           (0.02)                 (0.02) \nHousehold income (deciles)                  0.12 *                -0.03  \n                                           (0.03)                 (0.03) \n-------------------------------------------------------------------------\nR^2                            0.01         0.04       0.00        0.03  \nAdj. R^2                       0.01         0.04      -0.00        0.02  \nNum. obs.                   1375         1300       1516         993     \n=========================================================================\n* p &lt; 0.05\n\n\nWomen are again significantly more to the left than men in Norway but not in Ireland – which is what Iversen & Rosenbluth would have predicted. These effects are barely affected by the inclusion of controls for age, education, and household income.\nOverall, this relatively simple re-test supports the Iversen/Rosenbluth theory of gender differences."
  },
  {
    "objectID": "posts/compa_survey/index.html#next-steps",
    "href": "posts/compa_survey/index.html#next-steps",
    "title": "Comparing people’s behavior and attitudes across countries",
    "section": "Next steps",
    "text": "Next steps\nYou have now seen how you can do a simple cross-country comparative analysis of survey data with R. Obviously, you can adapt this type of analysis to many different questions so long as you have relevant data. For example, if you have macro-level indicators of how countries’ electoral systems look like (which you do: https://cpds-data.org/) and comparative survey data on people’s electoral behavior (which you can get via the ESS), you can test if rates of participation in election differ between types of electoral systems. The same applies to any combination of macro-level factor and micro-level behavior you can think of and have data for.\nImportantly, you may also have noticed that we did not use any form of quantitative data to measure macro-level factors or to pick countries – we simply relied on findings from other studies to select relevant countries.\nFinally, there are obviously ways to make this type of analysis more sophisticated. One additional step one can take is to test statistically if the coefficients from regression models are statistically significantly different from each other. Paternoster et al. (1998) have developed a simple formula for this that works basically like a standard two-sample t-test.\nThe most advanced way to compare survey data from different countries is obviously with a multi-level or hierarchical regression analysis. This is what academic researchers usally use because it multi-level regression models make it possible to use all available data from a comparative survey dataset instead of picking only a small number of countries. This makes it possible to estimate more complicated models and to get more accurate and reliable results. If you want to learn more about this, there is a series of articles that explains these models in a very intuitive and easy fashion (Merlo, Yang, et al. 2005; Merlo, Chaix, et al. 2005a, 2005b; Merlo et al. 2006; see also Steenbergen and Jones 2002), and the book by Finch et al. (2014) explains how you implement these models in R."
  },
  {
    "objectID": "posts/compa_survey/index.html#footnotes",
    "href": "posts/compa_survey/index.html#footnotes",
    "title": "Comparing people’s behavior and attitudes across countries",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSee https://github.com/erikgahner/PolData?tab=readme-ov-file#cross-sectional for a list of comparative survey data projects.↩︎\nObviously, questionnaires are translated where languages differ, and there are sometimes cases where some questions are only asked in a subset of all countries that are included in a given survey.↩︎"
  },
  {
    "objectID": "posts/measuringclass/index.html",
    "href": "posts/measuringclass/index.html",
    "title": "Measuring class with survey data",
    "section": "",
    "text": "Class is a key concept in the social and political sciences, and it explains many important phenomena, from party preferences and voting over social attitudes to health outcomes (e.g., Elo 2009; Gingrich 2017; Schwander and Häusermann 2013; Häusermann et al. 2022; Evans 2000). Therefore, it is important for every empirical social and political researcher to know how to measure people’s positions in class structures.\nSociologists have spent a lot of time on developing class schemes that make the abstract concept of “class” empirically measurable. The probably most famous class scheme is the Erikson-Goldthorpe-Portocarero (EGP) class scheme that was developed in the 1970s (Erikson, Goldthorpe, and Portocarero 1979), but there are also more recent schemes that take into account the fact that, as a result of technological change, increased educational attainment, and other factors, societies and labor markets in the 21st century look quite different than they did in the 1970s or 1980s. Daniel Oesch’s (2006) scheme is an important modern class scheme.\nThe basis for class schemes is generally occupation – what job does someone have? For example, someone who is a medical doctor would typically be seen as a “higher-skilled professional”, whereas a welder would usually be classified as a “skilled manual worker”. People’s occupations are usually measured with occupational classification schemes, the most widely used is the International Labour Organization’s (ILO) International Standard Classification of Occupations (ISCO) scheme.1 This scheme comes in different versions reflecting the years they were adopted: ISCO-68, ISCO-88, and ISCO-08.\nThere are of course some people who’s occupation is being self-employed – they run their own businesses, which can be a small one-person business (e.g., a shop) but it can also be a medium-sized company with 500 employees. Obviously, this has effects on their class membership: A small shop owner would often be considered to be a member of the “petite bourgeoisie”, while someone who owns a larger company might be considered a “capital owner”."
  },
  {
    "objectID": "posts/measuringclass/index.html#class-still-matters",
    "href": "posts/measuringclass/index.html#class-still-matters",
    "title": "Measuring class with survey data",
    "section": "",
    "text": "Class is a key concept in the social and political sciences, and it explains many important phenomena, from party preferences and voting over social attitudes to health outcomes (e.g., Elo 2009; Gingrich 2017; Schwander and Häusermann 2013; Häusermann et al. 2022; Evans 2000). Therefore, it is important for every empirical social and political researcher to know how to measure people’s positions in class structures.\nSociologists have spent a lot of time on developing class schemes that make the abstract concept of “class” empirically measurable. The probably most famous class scheme is the Erikson-Goldthorpe-Portocarero (EGP) class scheme that was developed in the 1970s (Erikson, Goldthorpe, and Portocarero 1979), but there are also more recent schemes that take into account the fact that, as a result of technological change, increased educational attainment, and other factors, societies and labor markets in the 21st century look quite different than they did in the 1970s or 1980s. Daniel Oesch’s (2006) scheme is an important modern class scheme.\nThe basis for class schemes is generally occupation – what job does someone have? For example, someone who is a medical doctor would typically be seen as a “higher-skilled professional”, whereas a welder would usually be classified as a “skilled manual worker”. People’s occupations are usually measured with occupational classification schemes, the most widely used is the International Labour Organization’s (ILO) International Standard Classification of Occupations (ISCO) scheme.1 This scheme comes in different versions reflecting the years they were adopted: ISCO-68, ISCO-88, and ISCO-08.\nThere are of course some people who’s occupation is being self-employed – they run their own businesses, which can be a small one-person business (e.g., a shop) but it can also be a medium-sized company with 500 employees. Obviously, this has effects on their class membership: A small shop owner would often be considered to be a member of the “petite bourgeoisie”, while someone who owns a larger company might be considered a “capital owner”."
  },
  {
    "objectID": "posts/measuringclass/index.html#what-information-do-you-need-and-where-do-you-get-it",
    "href": "posts/measuringclass/index.html#what-information-do-you-need-and-where-do-you-get-it",
    "title": "Measuring class with survey data",
    "section": "What information do you need, and where do you get it?",
    "text": "What information do you need, and where do you get it?\nClass is an individual-level variable: A person can be a member of the working class, but a country cannot. This means that we use individual-level data – survey data – to measure class. Such survey data need to contain three pieces of information (variables) that reflect people’s class membership:\n\nTheir occupation. This needs to be measured at the highest level of detail, meaning with the four-digit ISCO-88 or ISCO-08 scheme.\nWhether or not they are self-employed.\nIf they are self-employed, how many employees they have.\n\nMany survey datasets contain this information in some form, but it is usually easiest to use either data from large and well-known comparative social survey projects like the International Social Survey Project (ISSP) or the European Social Survey (ESS).2 Both are free to use (but you do need to register as a user). Many national survey projects also contain that information, but occupation is often coded based on the ISCO scheme but based on national occupational classification schemes (e.g., ANZSCO for Australia and New Zealand or SOC for the United States). These can be translated to the ISCO scheme with specific conversion tables, but this often takes quite a bit of time and effort.\nTechnically speaking, applying a class scheme to survey data is quite a bit of work because you need to go over a long list of occupations – the four-digit ISCO08 scheme contains 473 different occupations – and decide which class they belong to. Following this, you have to write code to group all the different observations in your dataset into their classes. Obviously, this would take a lot of time.\nFortunately, people have written packages for R that make this a quick and (normally) easy thing to do. Two relevant packages are the DIGCLASS package, which was developed by researchers at the EU, and the occupar package.3\nThe rest of this tutorial shows how you can measure people’s class with data from the ISSP and using the DIGCLASS package for R. Most of this also applies if you work with data from the ESS, but some data import and cleaning steps might be different. Below is an example of how your dataset needs to look like that you can use to guide your data cleaning and preparation when you work with the ESS."
  },
  {
    "objectID": "posts/measuringclass/index.html#installing-the-digclass-package",
    "href": "posts/measuringclass/index.html#installing-the-digclass-package",
    "title": "Measuring class with survey data",
    "section": "Installing the DIGCLASS package",
    "text": "Installing the DIGCLASS package\nThe DIGCLASS package is not on CRAN (the official R “app store”), but you can install it with the remotes-package (which you need to have installed first, of course):\n\n# install.packages(\"remotes\")\nremotes::install_git(\"https://code.europa.eu/digclass/digclass.git\")\n\nNext, we load the package with library(), in addition to the tidyverse package:\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(DIGCLASS)\ntheme_set(theme_classic())"
  },
  {
    "objectID": "posts/measuringclass/index.html#getting-issp-data",
    "href": "posts/measuringclass/index.html#getting-issp-data",
    "title": "Measuring class with survey data",
    "section": "Getting ISSP data",
    "text": "Getting ISSP data\nIn this tutorial, we will work with data from the 2016 Role of Government round of the ISSP (v. 2.0.0; 19.09.2018), which you can download from the GESIS data repository: https://www.gesis.org/en/issp/data-and-documentation/role-of-government/2016#c127852. As mentioned earlier, you need to register as a user, but this is free – and also gives you access to many other survey datasets like the Eurobarometer or the European Values Study.\nMake sure that you download the data in SPSS (.sav) format and that you store them in the folder that you are working in (ideally your RStudio Project folder)."
  },
  {
    "objectID": "posts/measuringclass/index.html#importing-the-dataset",
    "href": "posts/measuringclass/index.html#importing-the-dataset",
    "title": "Measuring class with survey data",
    "section": "Importing the dataset",
    "text": "Importing the dataset\nTo import the dataset, you can use the read_sav() function from the haven package. Important: Simply import the dataset for now, do not yet convert it with labelled::unlabelled()! I have stored the dataset as issp16.sav, so I need to specify this in my code – you obviously need to use the name that you gave your dataset file:\n\nissp &lt;- haven::read_sav(\"issp16.sav\")\n\nAs other large survey datasets, the ISSP dataset is very large and contains almost 400 variables:\n\ndim(issp)\n\n[1] 48720   395\n\n\nTo make things easier for now, we trim the data to the variables we actually need plus one variable (v19) that we can later use as a dependent variable in an example analysis:\n\nissp %&gt;% \n  select(studyno,country, # good to keep these in \n         ISCO08, # ISCO-08 occupational codes\n         EMPREL, # Employment relationship, to identify self-employed\n         NEMPLOY, # number of employees if self-employed\n         v19 # a variable measuring respondents' views on whether the government should spend more on the unemployed\n         ) -&gt; issp"
  },
  {
    "objectID": "posts/measuringclass/index.html#data-preparation",
    "href": "posts/measuringclass/index.html#data-preparation",
    "title": "Measuring class with survey data",
    "section": "Data preparation",
    "text": "Data preparation\nThe DIGCLASS package expects the data it works with to be in a specific format. If you for example call up the help file for the DIGCLASS::isco08_to_oesch() function with ?DIGCLASS::isco08_to_oesch and scroll down a bit, you see that the function needs three main inputs:\n\nx, which is the four-digit ISCO-08 scores. They need to be stored as text (character)\nself_employed, which needs to be a “numeric vector indicating whether each individual is self-employed (1) or an employee (0).”\nn_employees, which needs to be a “numeric vector indicating the number of employees under each respondent.”\n\nThis means we need to have three variables that correspond exactly to this: ISCO-08 scores as text, a 0/1 dummy indicating whether someone is self-employed, and a variable containing the number of employees for those who are self-employed.\n\nPreparing the ISCO-08 scores\nLet’s start the data preparation with ISCO08, and let’s first take a closer look at how it is stored now:\n\nclass(issp$ISCO08)\n\n[1] \"haven_labelled\" \"vctrs_vctr\"     \"double\"        \n\n\nFrom the result of class(), we see that the variable is stored in a labelled-type format – which is because the dataset was imported with haven – and this is also the case for all the other variables (see the Environment).\nTo see a bit more clearly how the ISCO08 variable looks like, let’s look at the first few observations:\n\nissp %&gt;% \n  select(ISCO08) %&gt;% \n  slice_head(n = 10) # to get first ten observations\n\n# A tibble: 10 × 1\n   ISCO08                                                               \n   &lt;dbl+lbl&gt;                                                            \n 1 2611 [Lawyers]                                                       \n 2 2512 [Software developers]                                           \n 3 1212 [Human resource managers]                                       \n 4 1439 [Services managers not elsewhere classified]                    \n 5 4419 [Clerical support workers not elsewhere classified]             \n 6 1345 [Education managers]                                            \n 7 3230 [Traditional and complementary medicine associate professionals]\n 8 2654 [Film, stage and related directors and producers]               \n 9 2611 [Lawyers]                                                       \n10 5131 [Waiters]                                                       \n\n\nYou see that the first observation is a lawyer, which has the ISCO-08 code 2611, the next is a software developer (ISCO-08 code 2512), and so on.\nNow comes an important step: We need to convert the ISCO08 variable to a character-type variable – for some reason, the DIGCLASS package expects that the ISCO codes are stored as text (e.g., “2611”, “2512”), and that is what we need to deliver for the package to work.\nTo do that, we simply use as.character():\n\nissp %&gt;% \n  mutate(isco_nums_as_text = as.character(ISCO08)) -&gt; issp\n\nThe new variable should now be a character-type variable:\n\nclass(issp$isco_nums_as_text)\n\n[1] \"character\"\n\n\nThis means that the ISCO-08 scores are taken care off and we can move on to the next piece of information that we need: a 0/1 variable that tells us if people are self-employed.\n\n\n\nSelf-employment\nInformation about how people earn their living in general is contained in the EMPREL variable. To see how this looks like, we can quickly tabulate the individual categories:\n\ntable(issp$EMPREL)\n\n\n    1     2     3     4 \n33504  4169  1797  1185 \n\n\nUnfortunately, we only get numbers. This is because the dataset is still stored in the labelled format, and we can quickly fix this by using unlabelled():\n\nissp &lt;- labelled::unlabelled(issp)\n\nNow the tabulation should work as intended:\n\ntable(issp$EMPREL)\n\n\nNAP (Code 3 in WORK; NZ: Code 2-9 MAINSTAT) \n                                          0 \n                                   Employee \n                                      33504 \n            Self-employed without employees \n                                       4169 \n               Self-employed with employees \n                                       1797 \n          Working for own family's business \n                                       1185 \n                                  No answer \n                                          0 \n\n\nYou see that most respondents fall into the “Employee” category, but there are also people who are self-employed with and without employees. Some also work in a family business. Finally, there are some empty categories that have no observations, but we ignore them for now.\n\nAll we really need to do is to re-code this variable into a 0/1 dummy that is equal to 1 if people are self-employed and 0 otherwise. Here, we can use the case_match() function, which is simply put a more advanced version of if_else():\n\nissp %&gt;% \n  mutate(selfemp = case_match(EMPREL,\n                              c(\"Self-employed without employees\",\n                                \"Self-employed with employees\") ~ 1,\n                              c(\"Employee\",\"Working for own family's business\") ~ 0,\n                              .default = NA)) -&gt; issp\n\nMaybe you can already see that we are here telling R to create a new variable called selfemp that is 1 if the EMPREL variable is either “Self-employed without employees” or “Self-employed with employees” and 0 otherwise. To make sure that observations that do not fit either of these conditions are excluded, we specify .default = NA.\nWe can do a quick cross-tabulation to see if the re-coding worked as intended:\n\ntable(issp$EMPREL,issp$selfemp)\n\n                                             \n                                                  0     1\n  NAP (Code 3 in WORK; NZ: Code 2-9 MAINSTAT)     0     0\n  Employee                                    33504     0\n  Self-employed without employees                 0  4169\n  Self-employed with employees                    0  1797\n  Working for own family's business            1185     0\n  No answer                                       0     0\n\n\nIt looks like things did work: the self-employed are coded as 1, all others are 0.\n\n\nNumber of employees\nThe final variable we need is how many employees those respondents who are self-employed have. Here, we can use the NEMPLOY variable from the ISSP dataset, but let’s again begin by simply checking what type this variable is:\n\nclass(issp$NEMPLOY)\n\n[1] \"numeric\"\n\n\nThe variable is already numeric, which means we do not really have to do anything with it – it is good to go. But we can nevertheless quickly visualize it to see how it is distributed:\n\nissp %&gt;% \n  ggplot(aes(x = NEMPLOY)) +\n    geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 46996 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\nThere are a few extreme outliers which make it difficult to see anything. We can get a clearer picture by removing those with more than 100 employees from the graph (obviously, we only do this for the graph!):\n\nissp %&gt;% \n  filter(NEMPLOY&lt;100) %&gt;% \n  ggplot(aes(x = NEMPLOY)) +\n    geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nMost respondents who have employees have only relatively small businesses with less than 25 employees."
  },
  {
    "objectID": "posts/measuringclass/index.html#generating-a-class-variable",
    "href": "posts/measuringclass/index.html#generating-a-class-variable",
    "title": "Measuring class with survey data",
    "section": "Generating a class variable",
    "text": "Generating a class variable\nWe now have all pieces of information we need and can get to the class variable. Let’s start by generating two of Daniel Oesch’s (2006) class schemes, the very simple one with five classes and the more advanced one with eight classes. Each can be generated with the isco08_to_oesch() function. The following code shows how to create both class schemes at once:\n\nissp %&gt;% \n  mutate(oesch_5 = DIGCLASS::isco08_to_oesch(x = isco_nums_as_text,\n                                             self_employed = selfemp,\n                                             n_employees = NEMPLOY,\n                                             n_classes = 5,\n                                             label = T,\n                                             to_factor = F),\n         oesch_8 = DIGCLASS::isco08_to_oesch(x = isco_nums_as_text,\n                                             self_employed = selfemp,\n                                             n_employees = NEMPLOY,\n                                             n_classes = 8,\n                                             label = T,\n                                             to_factor = F)) -&gt; issp\n\nℹ ISCO variable has occupations with digits less than 4. Converting to 4 digits.\n\n\n• Converted `110` to `0110`\n\n\n• Converted `310` to `0310`\n\n\n• Converted `210` to `0210`\n\n\nℹ ISCO variable has occupations with digits less than 4. Converting to 4 digits.\n\n\n• Converted `110` to `0110`\n\n\n• Converted `310` to `0310`\n\n\n• Converted `210` to `0210`\n\n\n\nLet’s have a look at the results:\n\ntable(issp$oesch_5)\n\n\n'Higher-grade service class'  'Lower-grade service class' \n                        6374                         7058 \n           'Skilled workers'      'Small business owners' \n                       12478                         1117 \n         'Unskilled workers' \n                        7558 \n\ntable(issp$oesch_8)\n\n\n                           '(Associate) managers' \n                                             5541 \n                                         'Clerks' \n                                             4043 \n                             'Production workers' \n                                             8309 \n'Self-employed professionals and large employers' \n                                              493 \n                                'Service workers' \n                                             7684 \n                          'Small business owners' \n                                             1117 \n            'Socio-cultural (semi-)professionals' \n                                             4667 \n                 'Technical (semi-)professionals' \n                                             2731 \n\n\nAnd we have what we want: Two class schemes, one simpler and the other a bit more detailed. The second one is used by for example Gingrich (2017) or Schwander & Häusermann (2013).4"
  },
  {
    "objectID": "posts/measuringclass/index.html#example-analysis",
    "href": "posts/measuringclass/index.html#example-analysis",
    "title": "Measuring class with survey data",
    "section": "Example analysis",
    "text": "Example analysis\nLet’s say we wanted to find out if people’s class has an effect on how they think about the welfare state, specifically whether the government should do more to support the unemployed. As mentioned earlier, the ISSP includes a variable that measures these attitudes and which looks like this:\n\nclass(issp$v19)\n\n[1] \"factor\"\n\ntable(issp$v19)\n\n\n             NAV (PH)       Spend much more            Spend more \n                    0                  7209                 12422 \nSpend the same as now            Spend less       Spend much less \n                16760                  6546                  2390 \n         Can't choose             No answer \n                    0                     0 \n\n\nThe variable is stored as a factor (i.e., as a categorical variable), but it has five categories – so we can, sort of, get away with treating it as if it were numeric (this is what Thewissen and Rueda 2019 also do). To be able to do that, we first have to check how it looks internally and then convert it:\n\nbst290::visfactor(dataset = issp,\n                  variable = \"v19\")\n\n values                labels\n      1              NAV (PH)\n      2       Spend much more\n      3            Spend more\n      4 Spend the same as now\n      5            Spend less\n      6       Spend much less\n      7          Can't choose\n      8             No answer\n\n\nThere is a bit of a divergence between values and labels – the NAV (PH) category is empty (see above), which means the lowest actual category has the value of 2 and so on. We can fix this by simply using droplevels() to get rid of empty categories and then as.numeric().\nOne thing we need to pay attention to is that, right now, lower scores correspond to more support for government aid to the unemployed. This is a bit strange to work with, so we reverse the scale of the new variable by subtracting it from 6 (so that the score of 1 becomes 6-1 = 5, 2 becomes 6-2 = 4, and so on:)\n\nissp %&gt;% \n  mutate(v19 = droplevels(v19),\n         unemspend = 6 - as.numeric(v19)) -&gt; issp\n\nThe new numeric variable has values from 1 to 5, which is what we want:\n\ntable(issp$unemspend)\n\n\n    1     2     3     4     5 \n 2390  6546 16760 12422  7209 \n\n\nLet’s now see to class influences attitudes toward help for the unemployed in Sweden (it is important to focus on one country alone, otherwise a simple linear regression model will give wrong results!):\n\nissp %&gt;% \n  filter(country == \"SE-Sweden\") -&gt; swe_data\n\nmod1 &lt;- lm(unemspend ~ oesch_5,\n           data = swe_data)\nsummary(mod1)\n\n\nCall:\nlm(formula = unemspend ~ oesch_5, data = swe_data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.38053 -0.38053  0.03929  0.43478  2.43478 \n\nCoefficients:\n                                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                         2.80315    0.05211  53.793  &lt; 2e-16 ***\noesch_5'Lower-grade service class'  0.15756    0.07196   2.190   0.0288 *  \noesch_5'Skilled workers'            0.50707    0.07234   7.010 4.56e-12 ***\noesch_5'Small business owners'     -0.23793    0.18084  -1.316   0.1886    \noesch_5'Unskilled workers'          0.57738    0.09391   6.148 1.16e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.8305 on 939 degrees of freedom\n  (196 observations deleted due to missingness)\nMultiple R-squared:  0.07685,   Adjusted R-squared:  0.07291 \nF-statistic: 19.54 on 4 and 939 DF,  p-value: 1.842e-15\n\n\nAs always, one category (here: “Higher-grade service class”) is omitted from the model and the coefficients show us the difference from each other class to the omitted one. This means that all classes except for small business owners are significantly more supportive of government help for the unemployed than the higher-grade service class.\nTo get a better sense, we can use prediction::prediction_summary() to get predicted support scores per class based on the model:\n\nprediction::prediction_summary(model = mod1,\n                               at = list(oesch_5 = unique(na.omit(swe_data$oesch_5))))\n\n                  at(oesch_5) Prediction      SE     z         p lower upper\n            'Skilled workers'      3.310 0.05017 65.98 0.000e+00 3.212 3.409\n 'Higher-grade service class'      2.803 0.05211 53.79 0.000e+00 2.701 2.905\n  'Lower-grade service class'      2.961 0.04963 59.65 0.000e+00 2.863 3.058\n          'Unskilled workers'      3.381 0.07813 43.27 0.000e+00 3.227 3.534\n      'Small business owners'      2.565 0.17317 14.81 1.202e-49 2.226 2.905\n\n\n\nWe can get an ever better picture of the results if we just visualize the result:\n\nprediction::prediction_summary(model = mod1,\n                               at = list(oesch_5 = unique(na.omit(swe_data$oesch_5)))) %&gt;% \n  ggplot(aes(x = Prediction, \n             y = reorder(`at(oesch_5)`,Prediction), \n             xmin = lower, xmax = upper)) +\n    geom_point(stat = \"identity\") +\n    geom_linerange() +\n    scale_x_continuous(breaks = seq(1,5,1),\n                       limits = c(1,5)) +\n    labs(x = \"Predicted support for government aid to the unemployed\",\n         y = \"Class\", caption = \"95% confidence intervals\")\n\n\n\n\n\n\n\n\nNote that we use reorder() to arrange the classes from highest to lowest support. Clearly, small business owners in Sweden are least supportive of government help for the unemployed, while unskilled and skilled workers (i.e., the “working class”) are most supportive. Looks like class does still matter in Sweden!"
  },
  {
    "objectID": "posts/measuringclass/index.html#footnotes",
    "href": "posts/measuringclass/index.html#footnotes",
    "title": "Measuring class with survey data",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSee also https://isco-ilo.netlify.app/en/isco-08/#download-isco-08-material↩︎\nSee https://issp.org/ and https://www.europeansocialsurvey.org/.↩︎\nSee https://code.europa.eu/digclass/digclass and https://github.com/DiogoFerrari/occupar.↩︎\nGingrich calls “socio-cultural (semi-) professionals” the “new middle class”, “technical (semi-) professionals”, “clerks”, and “(Associate) managers” are the “old middle class”, “service workers” are the “new working class”, and “Production workers” are the “old working class”. If you wanted, you could use case_match() to re-code the oesch_5 variable into a new and simpler class scheme that corresponds to what Gingrich is using.↩︎"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Testing big ideas with simple methods",
    "section": "",
    "text": "This is a blog for students in the social sciences (and related fields). The aim of this blog is to show them how they can test their ideas – e.g., about the role of class, social norms, or gender – with relatively simple methods and open-source software (R).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow vulnerable are workers to globalization (and what effects does this have)?\n\n\n\n\n\n\nSurvey\n\n\nGlobalization\n\n\nIndicator\n\n\nMerging\n\n\nPolitical science\n\n\nSociology\n\n\nEconomics\n\n\n\n\n\n\n\n\n\nMar 10, 2025\n\n\nCarlo Knotz\n\n\n\n\n\n\n\n\n\n\n\n\nComparing people’s behavior and attitudes across countries\n\n\n\n\n\n\nSurvey data\n\n\nComparative analysis\n\n\nGender\n\n\nESS\n\n\nPolitical science\n\n\nSociology\n\n\n\n\n\n\n\n\n\nMar 8, 2025\n\n\nCarlo Knotz\n\n\n\n\n\n\n\n\n\n\n\n\nMeasuring class with survey data\n\n\n\n\n\n\nSurvey data\n\n\nClass\n\n\nISSP\n\n\nPolitical science\n\n\nSociology\n\n\n\n\n\n\n\n\n\nMar 8, 2025\n\n\nCarlo Knotz\n\n\n\n\n\n\nNo matching items"
  }
]