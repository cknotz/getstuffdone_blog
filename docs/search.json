[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About this blog",
    "section": "",
    "text": "Hi!\nMy name is Carlo and I teach political science, including data analysis, at the University of Stavanger in Norway.\nI often find that students have quite smart ideas that they want to test in a course paper or thesis project and which could be tested with a relatively simple quantitative analysis – but they don’t quite know how to actually go about this (and might be intimidated by quantitative methods).\nThe aim of this blog is to show students (in the social sciences so far) how they can test big ideas – e.g., about the role of class, social norms, or gender – with relatively simple methods that they should be familiar with from their introductory statistics course and with the free and open-source R statistical programming language.\nThe posts are very much focussed on explaining the general logic of an analysis and assume that readers are at least a bit familiar with basic statistics and data analysis methods and how to do them in R (mainly; some posts also use other languages such as Javascript). Each post also gives pointers to more advanced resources (textbooks, journal articles) on quantitative methods."
  },
  {
    "objectID": "posts/measuringclass/index.html",
    "href": "posts/measuringclass/index.html",
    "title": "Measuring class with survey data",
    "section": "",
    "text": "Class is a key concept in the social and political sciences, and it explains many important phenomena, from party preferences and voting over social attitudes to health outcomes (e.g., Elo 2009; Gingrich 2017; Schwander and Häusermann 2013; Häusermann et al. 2022; Evans 2000). Therefore, it is important for every empirical social and political researcher to know how to measure people’s positions in class structures.\nSociologists have spent a lot of time on developing class schemes that make the abstract concept of “class” empirically measurable. The probably most famous class scheme is the Erikson-Goldthorpe-Portocarero (EGP) class scheme that was developed in the 1970s (Erikson, Goldthorpe, and Portocarero 1979), but there are also more recent schemes that take into account the fact that, as a result of technological change, increased educational attainment, and other factors, societies and labor markets in the 21st century look quite different than they did in the 1970s or 1980s. Daniel Oesch’s (2006) scheme is an important modern class scheme.\nThe basis for class schemes is generally occupation – what job does someone have? For example, someone who is a medical doctor would typically be seen as a “higher-skilled professional”, whereas a welder would usually be classified as a “skilled manual worker”. People’s occupations are usually measured with occupational classification schemes, the most widely used is the International Labour Organization’s (ILO) International Standard Classification of Occupations (ISCO) scheme.1 This scheme comes in different versions reflecting the years they were adopted: ISCO-68, ISCO-88, and ISCO-08.\nThere are of course some people who’s occupation is being self-employed – they run their own businesses, which can be a small one-person business (e.g., a shop) but it can also be a medium-sized company with 500 employees. Obviously, this has effects on their class membership: A small shop owner would often be considered to be a member of the “petite bourgeoisie”, while someone who owns a larger company might be considered a “capital owner”."
  },
  {
    "objectID": "posts/measuringclass/index.html#class-still-matters",
    "href": "posts/measuringclass/index.html#class-still-matters",
    "title": "Measuring class with survey data",
    "section": "",
    "text": "Class is a key concept in the social and political sciences, and it explains many important phenomena, from party preferences and voting over social attitudes to health outcomes (e.g., Elo 2009; Gingrich 2017; Schwander and Häusermann 2013; Häusermann et al. 2022; Evans 2000). Therefore, it is important for every empirical social and political researcher to know how to measure people’s positions in class structures.\nSociologists have spent a lot of time on developing class schemes that make the abstract concept of “class” empirically measurable. The probably most famous class scheme is the Erikson-Goldthorpe-Portocarero (EGP) class scheme that was developed in the 1970s (Erikson, Goldthorpe, and Portocarero 1979), but there are also more recent schemes that take into account the fact that, as a result of technological change, increased educational attainment, and other factors, societies and labor markets in the 21st century look quite different than they did in the 1970s or 1980s. Daniel Oesch’s (2006) scheme is an important modern class scheme.\nThe basis for class schemes is generally occupation – what job does someone have? For example, someone who is a medical doctor would typically be seen as a “higher-skilled professional”, whereas a welder would usually be classified as a “skilled manual worker”. People’s occupations are usually measured with occupational classification schemes, the most widely used is the International Labour Organization’s (ILO) International Standard Classification of Occupations (ISCO) scheme.1 This scheme comes in different versions reflecting the years they were adopted: ISCO-68, ISCO-88, and ISCO-08.\nThere are of course some people who’s occupation is being self-employed – they run their own businesses, which can be a small one-person business (e.g., a shop) but it can also be a medium-sized company with 500 employees. Obviously, this has effects on their class membership: A small shop owner would often be considered to be a member of the “petite bourgeoisie”, while someone who owns a larger company might be considered a “capital owner”."
  },
  {
    "objectID": "posts/measuringclass/index.html#what-information-do-you-need-and-where-do-you-get-it",
    "href": "posts/measuringclass/index.html#what-information-do-you-need-and-where-do-you-get-it",
    "title": "Measuring class with survey data",
    "section": "What information do you need, and where do you get it?",
    "text": "What information do you need, and where do you get it?\nClass is an individual-level variable: A person can be a member of the working class, but a country cannot. This means that we use individual-level data – survey data – to measure class. Such survey data need to contain three pieces of information (variables) that reflect people’s class membership:\n\nTheir occupation. This needs to be measured at the highest level of detail, meaning with the four-digit ISCO-88 or ISCO-08 scheme.\nWhether or not they are self-employed.\nIf they are self-employed, how many employees they have.\n\nMany survey datasets contain this information in some form, but it is usually easiest to use either data from large and well-known comparative social survey projects like the International Social Survey Project (ISSP) or the European Social Survey (ESS).2 Both are free to use (but you do need to register as a user). Many national survey projects also contain that information, but occupation is often coded based on the ISCO scheme but based on national occupational classification schemes (e.g., ANZSCO for Australia and New Zealand or SOC for the United States). These can be translated to the ISCO scheme with specific conversion tables, but this often takes quite a bit of time and effort.\nTechnically speaking, applying a class scheme to survey data is quite a bit of work because you need to go over a long list of occupations – the four-digit ISCO08 scheme contains 473 different occupations – and decide which class they belong to. Following this, you have to write code to group all the different observations in your dataset into their classes. Obviously, this would take a lot of time.\nFortunately, people have written packages for R that make this a quick and (normally) easy thing to do. Two relevant packages are the DIGCLASS package, which was developed by researchers at the EU, and the occupar package.3\nThe rest of this tutorial shows how you can measure people’s class with data from the ISSP and using the DIGCLASS package for R. Most of this also applies if you work with data from the ESS, but some data import and cleaning steps might be different. Below is an example of how your dataset needs to look like that you can use to guide your data cleaning and preparation when you work with the ESS."
  },
  {
    "objectID": "posts/measuringclass/index.html#installing-the-digclass-package",
    "href": "posts/measuringclass/index.html#installing-the-digclass-package",
    "title": "Measuring class with survey data",
    "section": "Installing the DIGCLASS package",
    "text": "Installing the DIGCLASS package\nThe DIGCLASS package is not on CRAN (the official R “app store”), but you can install it with the remotes-package (which you need to have installed first, of course):\n\n# install.packages(\"remotes\")\nremotes::install_git(\"https://code.europa.eu/digclass/digclass.git\")\n\nNext, we load the package with library(), in addition to the tidyverse package:\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(DIGCLASS)\ntheme_set(theme_classic())"
  },
  {
    "objectID": "posts/measuringclass/index.html#getting-issp-data",
    "href": "posts/measuringclass/index.html#getting-issp-data",
    "title": "Measuring class with survey data",
    "section": "Getting ISSP data",
    "text": "Getting ISSP data\nIn this tutorial, we will work with data from the 2016 Role of Government round of the ISSP (v. 2.0.0; 19.09.2018), which you can download from the GESIS data repository: https://www.gesis.org/en/issp/data-and-documentation/role-of-government/2016#c127852. As mentioned earlier, you need to register as a user, but this is free – and also gives you access to many other survey datasets like the Eurobarometer or the European Values Study.\nMake sure that you download the data in SPSS (.sav) format and that you store them in the folder that you are working in (ideally your RStudio Project folder)."
  },
  {
    "objectID": "posts/measuringclass/index.html#importing-the-dataset",
    "href": "posts/measuringclass/index.html#importing-the-dataset",
    "title": "Measuring class with survey data",
    "section": "Importing the dataset",
    "text": "Importing the dataset\nTo import the dataset, you can use the read_sav() function from the haven package. Important: Simply import the dataset for now, do not yet convert it with labelled::unlabelled()! I have stored the dataset as issp16.sav, so I need to specify this in my code – you obviously need to use the name that you gave your dataset file:\n\nissp &lt;- haven::read_sav(\"issp16.sav\")\n\nAs other large survey datasets, the ISSP dataset is very large and contains almost 400 variables:\n\ndim(issp)\n\n[1] 48720   395\n\n\nTo make things easier for now, we trim the data to the variables we actually need plus one variable (v19) that we can later use as a dependent variable in an example analysis:\n\nissp %&gt;% \n  select(studyno,country, # good to keep these in \n         ISCO08, # ISCO-08 occupational codes\n         EMPREL, # Employment relationship, to identify self-employed\n         NEMPLOY, # number of employees if self-employed\n         v19 # a variable measuring respondents' views on whether the government should spend more on the unemployed\n         ) -&gt; issp"
  },
  {
    "objectID": "posts/measuringclass/index.html#data-preparation",
    "href": "posts/measuringclass/index.html#data-preparation",
    "title": "Measuring class with survey data",
    "section": "Data preparation",
    "text": "Data preparation\nThe DIGCLASS package expects the data it works with to be in a specific format. If you for example call up the help file for the DIGCLASS::isco08_to_oesch() function with ?DIGCLASS::isco08_to_oesch and scroll down a bit, you see that the function needs three main inputs:\n\nx, which is the four-digit ISCO-08 scores. They need to be stored as text (character)\nself_employed, which needs to be a “numeric vector indicating whether each individual is self-employed (1) or an employee (0).”\nn_employees, which needs to be a “numeric vector indicating the number of employees under each respondent.”\n\nThis means we need to have three variables that correspond exactly to this: ISCO-08 scores as text, a 0/1 dummy indicating whether someone is self-employed, and a variable containing the number of employees for those who are self-employed.\n\nPreparing the ISCO-08 scores\nLet’s start the data preparation with ISCO08, and let’s first take a closer look at how it is stored now:\n\nclass(issp$ISCO08)\n\n[1] \"haven_labelled\" \"vctrs_vctr\"     \"double\"        \n\n\nFrom the result of class(), we see that the variable is stored in a labelled-type format – which is because the dataset was imported with haven – and this is also the case for all the other variables (see the Environment).\nTo see a bit more clearly how the ISCO08 variable looks like, let’s look at the first few observations:\n\nissp %&gt;% \n  select(ISCO08) %&gt;% \n  slice_head(n = 10) # to get first ten observations\n\n# A tibble: 10 × 1\n   ISCO08                                                               \n   &lt;dbl+lbl&gt;                                                            \n 1 2611 [Lawyers]                                                       \n 2 2512 [Software developers]                                           \n 3 1212 [Human resource managers]                                       \n 4 1439 [Services managers not elsewhere classified]                    \n 5 4419 [Clerical support workers not elsewhere classified]             \n 6 1345 [Education managers]                                            \n 7 3230 [Traditional and complementary medicine associate professionals]\n 8 2654 [Film, stage and related directors and producers]               \n 9 2611 [Lawyers]                                                       \n10 5131 [Waiters]                                                       \n\n\nYou see that the first observation is a lawyer, which has the ISCO-08 code 2611, the next is a software developer (ISCO-08 code 2512), and so on.\nNow comes an important step: We need to convert the ISCO08 variable to a character-type variable – for some reason, the DIGCLASS package expects that the ISCO codes are stored as text (e.g., “2611”, “2512”), and that is what we need to deliver for the package to work.\nTo do that, we simply use as.character():\n\nissp %&gt;% \n  mutate(isco_nums_as_text = as.character(ISCO08)) -&gt; issp\n\nThe new variable should now be a character-type variable:\n\nclass(issp$isco_nums_as_text)\n\n[1] \"character\"\n\n\nThis means that the ISCO-08 scores are taken care off and we can move on to the next piece of information that we need: a 0/1 variable that tells us if people are self-employed.\n\n\n\nSelf-employment\nInformation about how people earn their living in general is contained in the EMPREL variable. To see how this looks like, we can quickly tabulate the individual categories:\n\ntable(issp$EMPREL)\n\n\n    1     2     3     4 \n33504  4169  1797  1185 \n\n\nUnfortunately, we only get numbers. This is because the dataset is still stored in the labelled format, and we can quickly fix this by using unlabelled():\n\nissp &lt;- labelled::unlabelled(issp)\n\nNow the tabulation should work as intended:\n\ntable(issp$EMPREL)\n\n\nNAP (Code 3 in WORK; NZ: Code 2-9 MAINSTAT) \n                                          0 \n                                   Employee \n                                      33504 \n            Self-employed without employees \n                                       4169 \n               Self-employed with employees \n                                       1797 \n          Working for own family's business \n                                       1185 \n                                  No answer \n                                          0 \n\n\nYou see that most respondents fall into the “Employee” category, but there are also people who are self-employed with and without employees. Some also work in a family business. Finally, there are some empty categories that have no observations, but we ignore them for now.\n\nAll we really need to do is to re-code this variable into a 0/1 dummy that is equal to 1 if people are self-employed and 0 otherwise. Here, we can use the case_match() function, which is simply put a more advanced version of if_else():\n\nissp %&gt;% \n  mutate(selfemp = case_match(EMPREL,\n                              c(\"Self-employed without employees\",\n                                \"Self-employed with employees\") ~ 1,\n                              c(\"Employee\",\"Working for own family's business\") ~ 0,\n                              .default = NA)) -&gt; issp\n\nMaybe you can already see that we are here telling R to create a new variable called selfemp that is 1 if the EMPREL variable is either “Self-employed without employees” or “Self-employed with employees” and 0 otherwise. To make sure that observations that do not fit either of these conditions are excluded, we specify .default = NA.\nWe can do a quick cross-tabulation to see if the re-coding worked as intended:\n\ntable(issp$EMPREL,issp$selfemp)\n\n                                             \n                                                  0     1\n  NAP (Code 3 in WORK; NZ: Code 2-9 MAINSTAT)     0     0\n  Employee                                    33504     0\n  Self-employed without employees                 0  4169\n  Self-employed with employees                    0  1797\n  Working for own family's business            1185     0\n  No answer                                       0     0\n\n\nIt looks like things did work: the self-employed are coded as 1, all others are 0.\n\n\nNumber of employees\nThe final variable we need is how many employees those respondents who are self-employed have. Here, we can use the NEMPLOY variable from the ISSP dataset, but let’s again begin by simply checking what type this variable is:\n\nclass(issp$NEMPLOY)\n\n[1] \"numeric\"\n\n\nThe variable is already numeric, which means we do not really have to do anything with it – it is good to go. But we can nevertheless quickly visualize it to see how it is distributed:\n\nissp %&gt;% \n  ggplot(aes(x = NEMPLOY)) +\n    geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 46996 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\nThere are a few extreme outliers which make it difficult to see anything. We can get a clearer picture by removing those with more than 100 employees from the graph (obviously, we only do this for the graph!):\n\nissp %&gt;% \n  filter(NEMPLOY&lt;100) %&gt;% \n  ggplot(aes(x = NEMPLOY)) +\n    geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nMost respondents who have employees have only relatively small businesses with less than 25 employees."
  },
  {
    "objectID": "posts/measuringclass/index.html#generating-a-class-variable",
    "href": "posts/measuringclass/index.html#generating-a-class-variable",
    "title": "Measuring class with survey data",
    "section": "Generating a class variable",
    "text": "Generating a class variable\nWe now have all pieces of information we need and can get to the class variable. Let’s start by generating two of Daniel Oesch’s (2006) class schemes, the very simple one with five classes and the more advanced one with eight classes. Each can be generated with the isco08_to_oesch() function. The following code shows how to create both class schemes at once:\n\nissp %&gt;% \n  mutate(oesch_5 = DIGCLASS::isco08_to_oesch(x = isco_nums_as_text,\n                                             self_employed = selfemp,\n                                             n_employees = NEMPLOY,\n                                             n_classes = 5,\n                                             label = T,\n                                             to_factor = F),\n         oesch_8 = DIGCLASS::isco08_to_oesch(x = isco_nums_as_text,\n                                             self_employed = selfemp,\n                                             n_employees = NEMPLOY,\n                                             n_classes = 8,\n                                             label = T,\n                                             to_factor = F)) -&gt; issp\n\nℹ ISCO variable has occupations with digits less than 4. Converting to 4 digits.\n\n\n• Converted `110` to `0110`\n\n\n• Converted `310` to `0310`\n\n\n• Converted `210` to `0210`\n\n\nℹ ISCO variable has occupations with digits less than 4. Converting to 4 digits.\n\n\n• Converted `110` to `0110`\n\n\n• Converted `310` to `0310`\n\n\n• Converted `210` to `0210`\n\n\n\nLet’s have a look at the results:\n\ntable(issp$oesch_5)\n\n\n'Higher-grade service class'  'Lower-grade service class' \n                        6374                         7058 \n           'Skilled workers'      'Small business owners' \n                       12478                         1117 \n         'Unskilled workers' \n                        7558 \n\ntable(issp$oesch_8)\n\n\n                           '(Associate) managers' \n                                             5541 \n                                         'Clerks' \n                                             4043 \n                             'Production workers' \n                                             8309 \n'Self-employed professionals and large employers' \n                                              493 \n                                'Service workers' \n                                             7684 \n                          'Small business owners' \n                                             1117 \n            'Socio-cultural (semi-)professionals' \n                                             4667 \n                 'Technical (semi-)professionals' \n                                             2731 \n\n\nAnd we have what we want: Two class schemes, one simpler and the other a bit more detailed. The second one is used by for example Gingrich (2017) or Schwander & Häusermann (2013).4"
  },
  {
    "objectID": "posts/measuringclass/index.html#example-analysis",
    "href": "posts/measuringclass/index.html#example-analysis",
    "title": "Measuring class with survey data",
    "section": "Example analysis",
    "text": "Example analysis\nLet’s say we wanted to find out if people’s class has an effect on how they think about the welfare state, specifically whether the government should do more to support the unemployed. As mentioned earlier, the ISSP includes a variable that measures these attitudes and which looks like this:\n\nclass(issp$v19)\n\n[1] \"factor\"\n\ntable(issp$v19)\n\n\n             NAV (PH)       Spend much more            Spend more \n                    0                  7209                 12422 \nSpend the same as now            Spend less       Spend much less \n                16760                  6546                  2390 \n         Can't choose             No answer \n                    0                     0 \n\n\nThe variable is stored as a factor (i.e., as a categorical variable), but it has five categories – so we can, sort of, get away with treating it as if it were numeric (this is what Thewissen and Rueda 2019 also do). To be able to do that, we first have to check how it looks internally and then convert it:\n\nbst290::visfactor(dataset = issp,\n                  variable = \"v19\")\n\n values                labels\n      1              NAV (PH)\n      2       Spend much more\n      3            Spend more\n      4 Spend the same as now\n      5            Spend less\n      6       Spend much less\n      7          Can't choose\n      8             No answer\n\n\nThere is a bit of a divergence between values and labels – the NAV (PH) category is empty (see above), which means the lowest actual category has the value of 2 and so on. We can fix this by simply using droplevels() to get rid of empty categories and then as.numeric().\nOne thing we need to pay attention to is that, right now, lower scores correspond to more support for government aid to the unemployed. This is a bit strange to work with, so we reverse the scale of the new variable by subtracting it from 6 (so that the score of 1 becomes 6-1 = 5, 2 becomes 6-2 = 4, and so on:)\n\nissp %&gt;% \n  mutate(v19 = droplevels(v19),\n         unemspend = 6 - as.numeric(v19)) -&gt; issp\n\nThe new numeric variable has values from 1 to 5, which is what we want:\n\ntable(issp$unemspend)\n\n\n    1     2     3     4     5 \n 2390  6546 16760 12422  7209 \n\n\nLet’s now see to class influences attitudes toward help for the unemployed in Sweden (it is important to focus on one country alone, otherwise a simple linear regression model will give wrong results!):\n\nissp %&gt;% \n  filter(country == \"SE-Sweden\") -&gt; swe_data\n\nmod1 &lt;- lm(unemspend ~ oesch_5,\n           data = swe_data)\nsummary(mod1)\n\n\nCall:\nlm(formula = unemspend ~ oesch_5, data = swe_data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.38053 -0.38053  0.03929  0.43478  2.43478 \n\nCoefficients:\n                                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                         2.80315    0.05211  53.793  &lt; 2e-16 ***\noesch_5'Lower-grade service class'  0.15756    0.07196   2.190   0.0288 *  \noesch_5'Skilled workers'            0.50707    0.07234   7.010 4.56e-12 ***\noesch_5'Small business owners'     -0.23793    0.18084  -1.316   0.1886    \noesch_5'Unskilled workers'          0.57738    0.09391   6.148 1.16e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.8305 on 939 degrees of freedom\n  (196 observations deleted due to missingness)\nMultiple R-squared:  0.07685,   Adjusted R-squared:  0.07291 \nF-statistic: 19.54 on 4 and 939 DF,  p-value: 1.842e-15\n\n\nAs always, one category (here: “Higher-grade service class”) is omitted from the model and the coefficients show us the difference from each other class to the omitted one. This means that all classes except for small business owners are significantly more supportive of government help for the unemployed than the higher-grade service class.\nTo get a better sense, we can use prediction::prediction_summary() to get predicted support scores per class based on the model:\n\nprediction::prediction_summary(model = mod1,\n                               at = list(oesch_5 = unique(na.omit(swe_data$oesch_5))))\n\n                  at(oesch_5) Prediction      SE     z         p lower upper\n            'Skilled workers'      3.310 0.05017 65.98 0.000e+00 3.212 3.409\n 'Higher-grade service class'      2.803 0.05211 53.79 0.000e+00 2.701 2.905\n  'Lower-grade service class'      2.961 0.04963 59.65 0.000e+00 2.863 3.058\n          'Unskilled workers'      3.381 0.07813 43.27 0.000e+00 3.227 3.534\n      'Small business owners'      2.565 0.17317 14.81 1.202e-49 2.226 2.905\n\n\n\nWe can get an ever better picture of the results if we just visualize the result:\n\nprediction::prediction_summary(model = mod1,\n                               at = list(oesch_5 = unique(na.omit(swe_data$oesch_5)))) %&gt;% \n  ggplot(aes(x = Prediction, \n             y = reorder(`at(oesch_5)`,Prediction), \n             xmin = lower, xmax = upper)) +\n    geom_point(stat = \"identity\") +\n    geom_linerange() +\n    scale_x_continuous(breaks = seq(1,5,1),\n                       limits = c(1,5)) +\n    labs(x = \"Predicted support for government aid to the unemployed\",\n         y = \"Class\", caption = \"95% confidence intervals\")\n\n\n\n\n\n\n\n\nNote that we use reorder() to arrange the classes from highest to lowest support. Clearly, small business owners in Sweden are least supportive of government help for the unemployed, while unskilled and skilled workers (i.e., the “working class”) are most supportive. Looks like class does still matter in Sweden!"
  },
  {
    "objectID": "posts/measuringclass/index.html#footnotes",
    "href": "posts/measuringclass/index.html#footnotes",
    "title": "Measuring class with survey data",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSee also https://isco-ilo.netlify.app/en/isco-08/#download-isco-08-material↩︎\nSee https://issp.org/ and https://www.europeansocialsurvey.org/.↩︎\nSee https://code.europa.eu/digclass/digclass and https://github.com/DiogoFerrari/occupar.↩︎\nGingrich calls “socio-cultural (semi-) professionals” the “new middle class”, “technical (semi-) professionals”, “clerks”, and “(Associate) managers” are the “old middle class”, “service workers” are the “new working class”, and “Production workers” are the “old working class”. If you wanted, you could use case_match() to re-code the oesch_5 variable into a new and simpler class scheme that corresponds to what Gingrich is using.↩︎"
  },
  {
    "objectID": "posts/compa_survey/index.html",
    "href": "posts/compa_survey/index.html",
    "title": "Comparing people’s behavior and attitudes across countries",
    "section": "",
    "text": "How much are people’s opinions, behaviors, or perceptions affected by the environments (or “macro-level contexts”) they live in? Many sociologists argue that societal norms shape people’s behavior (e.g., that men do more of the housework in societies with egalitarian gender norms), and political scientists similarly suggest that political institutions influence political attitudes and behavior (e.g., that people participate more in elections in proportional or majoritarian electoral systems).\nTo test these types of theories, one needs to compare people’s opinions or behavior across contexts with different social norms, political institutions, or other macro-level factors that might have an influence on people. This is usually done with comparative survey data such as data from the European Social Survey, the International Social Survey Program, the Eurobarometer, the OECD Risks that Matter survey, or the World Values Study.1 The big advantage that comparative survey data offer is that they are standardized: The same survey with the exact same questions is conducted in multiple countries at the same time, so that people’s responses to the questions – i.e., their attitudes or behavior – can be directly compared.2 This means that one can use these survey data to find out for macro-level environmental factors influence (or at least are correlated with) people’s individual behaviors and attitudes.\nThis type of analysis can seem daunting to students but – as always in life – there are easier and more complicated ways of doing this. This post shows you how to do it in the easiest way possible, using R and techniques that undergraduate students usually learn in their introductory statistics courses: Descriptive statistics and linear regression models (taking inspiration from Blekesaune and Bjørkhaug 2021).\nSimply put (TL;DR), you pick a comparative survey dataset that contains relevant variables and covers countries that differ in relevant ways. For example, to study the effects of gender norms on the household division of work, you would find a survey dataset that contains questions about how much time people spend on housework and which covers countries with very egalitarian gender norms and countries with very inegalitarian gender norms. Then you pick one country that has, based on other studies or datasets, egalitarian norms and one that has very inegalitarian norms and you analyze how couples divide household chores between them (see e.g., Iversen and Rosenbluth 2006). Ideally, the countries you pick are otherwise as similar as possible so that you can be more sure that any differences you find are really the result of gender norms and not other factors.\nThematically, we stick to the general topic of gender and gender differences, but we do not look at household work. Instead, we look at the political gender gap: How men and women differ in their political opinions (Inglehart and Norris 2000; Iversen and Rosenbluth 2010, 2006). More specifically, we do a simple re-test of the “household bargaining theory” of political gender differences by Iversen & Rosenbluth (2006, 2010)."
  },
  {
    "objectID": "posts/compa_survey/index.html#are-people-influenced-by-the-environments-they-live-in",
    "href": "posts/compa_survey/index.html#are-people-influenced-by-the-environments-they-live-in",
    "title": "Comparing people’s behavior and attitudes across countries",
    "section": "",
    "text": "How much are people’s opinions, behaviors, or perceptions affected by the environments (or “macro-level contexts”) they live in? Many sociologists argue that societal norms shape people’s behavior (e.g., that men do more of the housework in societies with egalitarian gender norms), and political scientists similarly suggest that political institutions influence political attitudes and behavior (e.g., that people participate more in elections in proportional or majoritarian electoral systems).\nTo test these types of theories, one needs to compare people’s opinions or behavior across contexts with different social norms, political institutions, or other macro-level factors that might have an influence on people. This is usually done with comparative survey data such as data from the European Social Survey, the International Social Survey Program, the Eurobarometer, the OECD Risks that Matter survey, or the World Values Study.1 The big advantage that comparative survey data offer is that they are standardized: The same survey with the exact same questions is conducted in multiple countries at the same time, so that people’s responses to the questions – i.e., their attitudes or behavior – can be directly compared.2 This means that one can use these survey data to find out for macro-level environmental factors influence (or at least are correlated with) people’s individual behaviors and attitudes.\nThis type of analysis can seem daunting to students but – as always in life – there are easier and more complicated ways of doing this. This post shows you how to do it in the easiest way possible, using R and techniques that undergraduate students usually learn in their introductory statistics courses: Descriptive statistics and linear regression models (taking inspiration from Blekesaune and Bjørkhaug 2021).\nSimply put (TL;DR), you pick a comparative survey dataset that contains relevant variables and covers countries that differ in relevant ways. For example, to study the effects of gender norms on the household division of work, you would find a survey dataset that contains questions about how much time people spend on housework and which covers countries with very egalitarian gender norms and countries with very inegalitarian gender norms. Then you pick one country that has, based on other studies or datasets, egalitarian norms and one that has very inegalitarian norms and you analyze how couples divide household chores between them (see e.g., Iversen and Rosenbluth 2006). Ideally, the countries you pick are otherwise as similar as possible so that you can be more sure that any differences you find are really the result of gender norms and not other factors.\nThematically, we stick to the general topic of gender and gender differences, but we do not look at household work. Instead, we look at the political gender gap: How men and women differ in their political opinions (Inglehart and Norris 2000; Iversen and Rosenbluth 2010, 2006). More specifically, we do a simple re-test of the “household bargaining theory” of political gender differences by Iversen & Rosenbluth (2006, 2010)."
  },
  {
    "objectID": "posts/compa_survey/index.html#the-iversenrosenbluth-hypothesis-in-the-smallest-of-nutshells",
    "href": "posts/compa_survey/index.html#the-iversenrosenbluth-hypothesis-in-the-smallest-of-nutshells",
    "title": "Comparing people’s behavior and attitudes across countries",
    "section": "The Iversen/Rosenbluth hypothesis in the smallest of nutshells",
    "text": "The Iversen/Rosenbluth hypothesis in the smallest of nutshells\nVery (very) simply put, Iversen & Rosenbluth (2006, 2010) argue that women are politically to the left of men, other things equal, but also that this depends on macro-level factors – specifically on how countries’ economies are structured. In countries that have economies that rely strongly on specific skills (think: highly trained craftsmen and -women that are really good at a few specific tasks), this gap should be particularly large. In contrast, in countries that rely more on general skills (think: flexible professionals that can quickly switch between jobs), women and men should be more equal in their political opinions."
  },
  {
    "objectID": "posts/compa_survey/index.html#re-analysis-using-ess-data",
    "href": "posts/compa_survey/index.html#re-analysis-using-ess-data",
    "title": "Comparing people’s behavior and attitudes across countries",
    "section": "Re-analysis using ESS data",
    "text": "Re-analysis using ESS data\nWe do a new test of this hypothesis using data from the tenth (2018) round of the European Social Survey (ESS).\nOut of all the countries covered by this round of the ESS, we select the following two countries based on information we have from Iversen & Rosenbluth (2006), but also other studies (Hall and Soskice 2001; Iversen and Soskice 2001):\n\nIreland, which is known to rely strongly on general skills. Here, we expect a small gender gap.\nNorway, which relies on specific skills. Here, we expect a large gender gap.\n\nWe use the following micro-level variables from the ESS:\n\nLeft-right ideology (lrscale). This is measures people’s general political orientation and is the dependent variable.\nGender (gndr; male/female). This is the central independent variable here.\nHousehold income (hinctnta): This is a relevant control variable.\nAge (agea; years): Also a control variable.\nEducation (eduyrs): A final variable we want to control for.\n\n\nPackages\nWe use the tidyverse for data management & visualization and texreg to present regression results:\n\nlibrary(tidyverse)\nlibrary(texreg)\n\n\n\nSet theme for graphs\nThe classic theme just looks better…\n\ntheme_set(theme_classic())\n\n\n\nData import\nYou can download the data for free (after a registration) from https://www.europeansocialsurvey.org/. I use the .dta (Stata) version and saved the dataset as ESS10.dta on my computer. I use the haven package to import the dataset, and then immediately convert the dataset to the traditional R format with labelled::unlabelled (to be able to do this, you need to have both of these packages installed. Loading them with library() is not necessary).\n\ness &lt;- labelled::unlabelled(haven::read_dta(\"ESS10.dta\"))\n\n\n\nTrimming\nThe entire ESS is massive. To make things easier to handle, we select only the relevant variables (plus some useful “administrative” ones such as idno, essround, and cntry):\n\ness %&gt;% \n  select(idno,essround,cntry,lrscale,gndr,agea,eduyrs,hinctnta) -&gt; ess\n\n\n\nData cleaning\nHousehold income (hinctnta) and left-right self-placement (lrscale) are factors and need to be correctly converted to numeric before we can use them in a regression analysis:\n\nclass(ess$hinctnta)\n\n[1] \"factor\"\n\nclass(ess$lrscale)\n\n[1] \"factor\"\n\nbst290::visfactor(dataset = ess,\n                  variable = \"hinctnta\") # no label/value divergence, no adjustment needed\n\n values          labels\n      1  J - 1st decile\n      2  R - 2nd decile\n      3  C - 3rd decile\n      4  M - 4th decile\n      5  F - 5th decile\n      6  S - 6th decile\n      7  K - 7th decile\n      8  P - 8th decile\n      9  D - 9th decile\n     10 H - 10th decile\n\nbst290::visfactor(dataset = ess,\n                  variable = \"lrscale\") # labels/values are off by 1, needs to be adjusted\n\n values labels\n      1   Left\n      2      1\n      3      2\n      4      3\n      5      4\n      6      5\n      7      6\n      8      7\n      9      8\n     10      9\n     11  Right\n\ness %&gt;% \n  mutate(hhinc = as.numeric(hinctnta),\n         lrscale = as.numeric(lrscale) - 1) -&gt; ess\n\n\n\nCountry selection\nThe final “trimming” operation we need to do is to select only the two countries we want to compare. This is easy to do with filter(), and we create separate datasets for each of the two countries:\n\nunique(ess$cntry)\n\n [1] \"BE\" \"BG\" \"CH\" \"CZ\" \"EE\" \"FI\" \"FR\" \"GB\" \"GR\" \"HR\" \"HU\" \"IE\" \"IS\" \"IT\" \"LT\"\n[16] \"ME\" \"MK\" \"NL\" \"NO\" \"PT\" \"SI\" \"SK\"\n\ness %&gt;% \n  filter(cntry==\"NO\") -&gt; norway\n\ness %&gt;% \n  filter(cntry==\"IE\") -&gt; ireland\n\n\n\nDescriptive analysis of political gender gaps by country\nIt is good practice to first do a bit of visual analysis to get a sense of how the data look before moving to more complicated statistical analyses. Here, we use a bit of dplyr (group_by() & summarize()) to calculate the political gender gap in each country – how men and women differ, on average, in their ideology – and then visualize the result with a ggplot() bar graph.\nireland %&gt;%\n  group_by(gndr) %&gt;% \n  summarise(avg_lr = mean(lrscale, na.rm = T)) %&gt;% \n  ggplot(aes(x = gndr, y = avg_lr)) +\n    geom_bar(stat = \"identity\") +\n    geom_text(aes(label = round(avg_lr, digits = 1)), vjust = -.5) +\n    scale_y_continuous(limits = c(0,6)) +\n    labs(x = \"Gender\", y = \"Average left-right placement\",\n         caption = \"Higher scores = more conservative\",\n         title = \"Ireland\")\nnorway %&gt;%\n  group_by(gndr) %&gt;% \n  summarise(avg_lr = mean(lrscale, na.rm = T)) %&gt;% \n  ggplot(aes(x = gndr, y = avg_lr)) +\n    geom_bar(stat = \"identity\") +\n    geom_text(aes(label = round(avg_lr, digits = 1)), vjust = -.5) +\n    scale_y_continuous(limits = c(0,6)) +\n    labs(x = \"Gender\", y = \"Average left-right placement\",\n         caption = \"Higher scores = more conservative\",\n         title = \"Norway\")\n\n\n\n\n\n\n\n\n\n\nIt looks like the data support the hypothesis. We expected a small ideological gap between men and women in Ireland, and that is what we find: Men and women hardly differ on average in their left-right orientation (5.3 - 5.2 = 0.1). In contrast, this difference is four times as large (5.2 - 4.8 = 0.4), which is what we would have expected.\n\n\nRegression analysis\nWhile the visual analysis is useful, we also need to do a more thorough test where we control for other variables. To do that, we do a simple linear (OLS) regression analysis separately for each country:\n\n# Baseline model\nno_mod1 &lt;- lm(lrscale ~ gndr,\n               data = norway)\n\n# With controls\nno_mod2 &lt;- lm(lrscale ~ gndr + agea + eduyrs + hhinc,\n               data = norway)\n\n# Baseline model\nie_mod1 &lt;- lm(lrscale ~ gndr,\n               data = ireland)\n\n# With controls\nie_mod2 &lt;- lm(lrscale ~ gndr + agea + eduyrs + hhinc,\n               data = ireland)\n\nWe use screenreg() from the texreg package to show the results directly next to each other so that we can spot differences between the two countries more easily:\n\nscreenreg(list(no_mod1,no_mod2,ie_mod1,ie_mod2),\n          stars = 0.05,\n          custom.header = list(\"Norway\" = 1:2, \"Ireland\" = 3:4),\n          custom.model.names = c(\"No controls\",\"Controls\",\n                                 \"No controls\",\"Controls\"),\n          custom.coef.map = list(\"(Intercept)\" = \"Intercept\",\n                                 \"gndrFemale\" = \"Female\",\n                                 \"agea\" = \"Age\",\n                                 \"eduyrs\" = \"Education (years)\",\n                                 \"hhinc\" = \"Household income (deciles)\"))\n\n\n=========================================================================\n                                    Norway                 Ireland       \n                            ----------------------  ---------------------\n                            No controls  Controls   No controls  Controls\n-------------------------------------------------------------------------\nIntercept                      5.21 *       5.41 *     5.26 *      4.61 *\n                              (0.09)       (0.35)     (0.08)      (0.38) \nFemale                        -0.41 *      -0.38 *    -0.02       -0.03  \n                              (0.13)       (0.13)     (0.11)      (0.13) \nAge                                         0.01 *                 0.02 *\n                                           (0.00)                 (0.00) \nEducation (years)                          -0.10 *                -0.01  \n                                           (0.02)                 (0.02) \nHousehold income (deciles)                  0.12 *                -0.03  \n                                           (0.03)                 (0.03) \n-------------------------------------------------------------------------\nR^2                            0.01         0.04       0.00        0.03  \nAdj. R^2                       0.01         0.04      -0.00        0.02  \nNum. obs.                   1375         1300       1516         993     \n=========================================================================\n* p &lt; 0.05\n\n\nWomen are again significantly more to the left than men in Norway but not in Ireland – which is what Iversen & Rosenbluth would have predicted. These effects are barely affected by the inclusion of controls for age, education, and household income.\nOverall, this relatively simple re-test supports the Iversen/Rosenbluth theory of gender differences."
  },
  {
    "objectID": "posts/compa_survey/index.html#next-steps",
    "href": "posts/compa_survey/index.html#next-steps",
    "title": "Comparing people’s behavior and attitudes across countries",
    "section": "Next steps",
    "text": "Next steps\nYou have now seen how you can do a simple cross-country comparative analysis of survey data with R. Obviously, you can adapt this type of analysis to many different questions so long as you have relevant data. For example, if you have macro-level indicators of how countries’ electoral systems look like (which you do: https://cpds-data.org/) and comparative survey data on people’s electoral behavior (which you can get via the ESS), you can test if rates of participation in election differ between types of electoral systems. The same applies to any combination of macro-level factor and micro-level behavior you can think of and have data for.\nImportantly, you may also have noticed that we did not use any form of quantitative data to pick countries – we simply relied on findings from other studies to select relevant countries.\nFinally, there are obviously ways to make this type of analysis more sophisticated. One additional step one can take is to test statistically if the coefficients from regression models are statistically significantly different from each other. Paternoster et al. (1998) have developed a simple formula for this that works basically like a standard two-sample t-test.\nThe most advanced way to compare survey data from different countries is obviously with a multi-level or hierarchical regression analysis. This is what academic researchers usally use because it multi-level regression models make it possible to use all available data from a comparative survey dataset instead of picking only a small number of countries. This makes it possible to estimate more complicated models and to get more accurate and reliable results. If you want to learn more about this, there is a series of articles that explains these models in a very intuitive and easy fashion (Merlo, Yang, et al. 2005; Merlo, Chaix, et al. 2005a, 2005b; Merlo et al. 2006; see also Steenbergen and Jones 2002), and the book by Finch et al. (2014) explains how you implement these models in R."
  },
  {
    "objectID": "posts/compa_survey/index.html#footnotes",
    "href": "posts/compa_survey/index.html#footnotes",
    "title": "Comparing people’s behavior and attitudes across countries",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSee https://github.com/erikgahner/PolData?tab=readme-ov-file#cross-sectional for a list of comparative survey data projects.↩︎\nObviously, questionnaires are translated where languages differ, and there are sometimes cases where some questions are only asked in a subset of all countries that are included in a given survey.↩︎"
  },
  {
    "objectID": "posts/randomsurvey/index.html",
    "href": "posts/randomsurvey/index.html",
    "title": "Implement your own survey experiment",
    "section": "",
    "text": "Social scientists are often interested in how people’s attitudes or behavior changes when they are exposed to different information. For example, many suspect that people’s political attitudes can influenced by the “framing” of the news they consume (i.e., whether they watch Fox News or MSNBC) — and political scientists have been studying whether that is true or not (Nelson, Clawson, and Oxley 1997). Similarly, many social scientists study the effects of gender — for example if voters hold male and female politicians to different standards (Cucchi and Cavazza 2021).\nThe probably most important tool to study these things are survey experiments. The logic of a survey experiment is simple. If, for example, you want to see how the framing of news stories shapes attitudes, you recruit a group of participants and divide them randomly into two groups. One group gets to read one framing of a news story, the other group reads the alternative, and then you record their attitudes (plus other information you are intersted in).\n\n\n\n\n\nflowchart TD\n  A(Recruit participants) --&gt; B{Randomly assign to...}\n  B --&gt; C(News story version 1)\n  B --&gt; D(News story version 2)\n  C --&gt; E(Compare responses)\n  D --&gt; E\n\n\n\n\n\n\nOnce you have collected the data, you compare the two groups and see if they differ in their attitudes. Because participants are randomly allocated to different framings, you can be confident that whatever effects you found are really due to the framing and not other variables (Rubin 1974). Because you split your participants into two groups, this is also called a split-sample survey experiment. Medical resarchers would probably call this a randomized controlled trial (RCT), and people in marketing or UX research might know it as A/B testing.\n\n\n\n\n\n\nEthical issues\n\n\n\nAn important aspect you need to consider when planning a survey experiment are whether there are potential ethical issues that result from exposing different groups of participants to different information, because this can be seen as misleading or misinforming them. Universities’ ethics boards or relevant advisory bodies can help with this. In Norway, SIKT provides guidelines and further information (in Norwegian only)."
  },
  {
    "objectID": "posts/randomsurvey/index.html#survey-experiments-in-the-social-sciences",
    "href": "posts/randomsurvey/index.html#survey-experiments-in-the-social-sciences",
    "title": "Implement your own survey experiment",
    "section": "",
    "text": "Social scientists are often interested in how people’s attitudes or behavior changes when they are exposed to different information. For example, many suspect that people’s political attitudes can influenced by the “framing” of the news they consume (i.e., whether they watch Fox News or MSNBC) — and political scientists have been studying whether that is true or not (Nelson, Clawson, and Oxley 1997). Similarly, many social scientists study the effects of gender — for example if voters hold male and female politicians to different standards (Cucchi and Cavazza 2021).\nThe probably most important tool to study these things are survey experiments. The logic of a survey experiment is simple. If, for example, you want to see how the framing of news stories shapes attitudes, you recruit a group of participants and divide them randomly into two groups. One group gets to read one framing of a news story, the other group reads the alternative, and then you record their attitudes (plus other information you are intersted in).\n\n\n\n\n\nflowchart TD\n  A(Recruit participants) --&gt; B{Randomly assign to...}\n  B --&gt; C(News story version 1)\n  B --&gt; D(News story version 2)\n  C --&gt; E(Compare responses)\n  D --&gt; E\n\n\n\n\n\n\nOnce you have collected the data, you compare the two groups and see if they differ in their attitudes. Because participants are randomly allocated to different framings, you can be confident that whatever effects you found are really due to the framing and not other variables (Rubin 1974). Because you split your participants into two groups, this is also called a split-sample survey experiment. Medical resarchers would probably call this a randomized controlled trial (RCT), and people in marketing or UX research might know it as A/B testing.\n\n\n\n\n\n\nEthical issues\n\n\n\nAn important aspect you need to consider when planning a survey experiment are whether there are potential ethical issues that result from exposing different groups of participants to different information, because this can be seen as misleading or misinforming them. Universities’ ethics boards or relevant advisory bodies can help with this. In Norway, SIKT provides guidelines and further information (in Norwegian only)."
  },
  {
    "objectID": "posts/randomsurvey/index.html#implementing-your-own-survey-experiment",
    "href": "posts/randomsurvey/index.html#implementing-your-own-survey-experiment",
    "title": "Implement your own survey experiment",
    "section": "Implementing your own survey experiment",
    "text": "Implementing your own survey experiment\nSome survey software tools (e.g., Qualtrics) have in-built randomization features that allow you to implement a split-sample experiment directly within your survey. If you have access to these platforms (e.g., via your university), you should be all good to go.\nHowever, not everyone has access to these tools. For example, Nettskjema, the survey platform used at many Norwegian universities, only allows users to randomize the order of answer categories within a single question – but it is not possible to randomly assign respondents to different questions or different versions of the same question, without which a proper survey experiment is not possible. This means that if you do not have access to survey software with included randomization, you need to get creative.\nThe solution, in a nutshell: Create two versions of your survey questionnaires in your standard survey platform. Each version is exactly identical — except for the one experimental question (e.g., one where you ask respondents to read a brief news story and then ask them to state their opinion), which is different. Then you build a simple website that uses Javascript to randomly assign participants to one or the other version of your questionnaire. You can deploy your website via GitHub Pages. Once you have collected enough data, you merge the two datasets and compare response patterns between them.\n\n\n\n\n\nflowchart TD\n  A(Welcome page)\n  A --&gt; B{Randomization}\n  B --&gt; C(Questionnaire with news story version 1)\n  B --&gt; D(Questionnaire with news story version 2)\n  C --&gt; E[Merge responses & analyze differences]\n  D --&gt; E\n\n\n\n\n\n\nIn more detail: When you deploy a survey online, the first thing participants will normally see is a starting page that gives them some information about the purpose of the survey, about how their information is collected, and whom they can contact in case of questions. Participants then click on a button to confirm their willingness to do the survey and then begin answering questions.\nUsually, this starting page is part of the survey questionnaire. But you can also create an external website that provides all the required information and a “confirm” button. Importantly, you can use Javascript to let the button send your respondents to one of two versions of your questionnaire at random.\nCreating a simple starting page is easy thanks to ChatGPT, which can write HTML, CSS, and Javascript code for a complete and functioning website. This is what I used to build an example of such a site (see here for the protocol). The final code, after some adjustments, looks like this:\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n  &lt;title&gt;Responsive Website&lt;/title&gt;\n  &lt;style&gt;\n    body {\n      font-family: 'Arial', sans-serif;\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      min-height: 100vh;\n      background-color: #f4f4f4;\n    }\n\n    #content {\n      max-width: 600px;\n      width: 100%;\n      text-align: justify;\n      padding: 20px;\n      background-color: #fff;\n      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n      border-radius: 8px;\n      margin: 20px; /* Add extra margin around the content */\n    }\n\n    #button {\n      padding: 10px 20px;\n      font-size: 16px;\n      background-color: #3498db;\n      color: #fff;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n      transition: background-color 0.3s;\n    }\n\n    #button:hover {\n      background-color: #2980b9;\n    }\n\n    #footnote {\n      font-size: 12px;\n      color: #777;\n      margin-top: 20px;\n    }\n  &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n  &lt;div id=\"content\"&gt;\n    &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed tincidunt lorem vel nisi venenatis tristique.&lt;/p&gt;\n  &lt;/div&gt;\n\n  &lt;button id=\"button\" onclick=\"myFunction()\"&gt;Click me&lt;/button&gt;\n\n  &lt;div id=\"footnote\"&gt;\n    &lt;p&gt;This is a footnote at the bottom of the page.&lt;/p&gt;\n  &lt;/div&gt;\n\n  &lt;script&gt;\n    function myFunction() {\n      alert(\"Button clicked!\");\n    }\n  &lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n\nThis is really nothing more than a simple website with some CSS code for styling (within the &lt;style&gt;&lt;/style&gt; tags), a small text box with random Lorem ipsum text, and a button. I also made sure to ask ChatGPT to make the website responsive so that it works on different types of devices, which is important. If you are not familiar with HTML or web development in general, it can help to re-create the chat with ChatGPT and ask it to explain the code in more detail. The screenshot below shows how the site (with different text) looks like, but you can also see the site directly in action here.\n\n\n\nScreenshot of my mock starting page\n\n\nNext, I replaced the Javascript code linked to the button (within the &lt;script&gt;&lt;/script&gt; tags above), which initially only creates a popup window, with code to randomly forward people to different websites1:\n&lt;script&gt;\n    function randomizeButton() {\n        if (Math.random() &gt; 0.5){\n        window.location.href = \"https://skateistan.org/\";\n    } else {\n        window.location.href = \"https://www.honnoldfoundation.org\";\n    }}\n  &lt;/script&gt;\nIt should not be too difficult to see what is going on here: When a participant clicks the button, Math.random() essentially performs a coin flip by drawing a random number between 0 and 1. When that number is greater than 0.5, the function forwards to skateistan.org; if the number is below 0.5, participants instead get forwarded to the Alex Honnold foundation. When running a survey experiment, you would obviously include links to the two versions of your survey.\nThe function is then linked to the Take me to the survey! button in the HTML code by replacing myFunction() (see above) with randomizeButton():\n&lt;button id=\"button\" onclick=\"randomizeButton()\"&gt;Take me to the survey!&lt;/button&gt;\nAnd that is pretty much it: This website provides some basic information and randonly forwards users to one of two alternative websites when they click on a button. This is all you need to implement the randomization-part of your survey experiment. If you like, you can inspect (and copy) the source code for the final page here.\nAs it is now, the website forwards people either to the Alex Honnold Foundation or Skateistan — but it is easy to just replace the links in the HTML code with links to the two versions of your survey. When you then route your participants via this page, about 50% should randomly get forwarded to questionnaire version 1, the others get forwarded to version 2 (you do need a large sample for this to work out: Tversky and Kahneman 1971).\nIt may make sense to start each of your two questionnaire versions by asking participants to again explicitly consent to participating in the survey so that you have that recorded in your data. Also, you obviously need to make absolutely sure that your two surveys are really identical except for the “treatment” you want to test. This means: Pretest, pretest, pretest!"
  },
  {
    "objectID": "posts/randomsurvey/index.html#deploying-your-randomizer-website",
    "href": "posts/randomsurvey/index.html#deploying-your-randomizer-website",
    "title": "Implement your own survey experiment",
    "section": "Deploying your randomizer website",
    "text": "Deploying your randomizer website\nDeploying the website is free and fairly easy and quick if you use GitHub Pages. See here for a step-by-step instruction: https://pages.github.com/#project-site:\n\nCreate a “Project site”\nChoose “Start from scratch”\nPaste the HTML code for your randomizer website into the index.html document on GitHub and commit.\nAdjust the repository settings on GitHub as shown below.\nIf necessary, make changes to the HTML document on GitHub and re-commit.\n\n\n\n\nGitHub settings"
  },
  {
    "objectID": "posts/randomsurvey/index.html#footnotes",
    "href": "posts/randomsurvey/index.html#footnotes",
    "title": "Implement your own survey experiment",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nWith help from https://www.oncrawl.com/technical-seo/javascript-redirects-seo-ultimate-guide/.↩︎"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Testing big ideas with simple methods",
    "section": "",
    "text": "This is a blog for students in the social sciences (and related fields). The aim of this blog is to show them how they can test their ideas – e.g., about the role of class, social norms, or gender – with relatively simple methods and open-source software (R).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nComparing people’s behavior and attitudes across countries\n\n\n\n\n\n\nSurvey data\n\n\nComparative analysis\n\n\nGender\n\n\nESS\n\n\nPolitical science\n\n\nSociology\n\n\n\n\n\n\n\n\n\nMar 8, 2025\n\n\nCarlo Knotz\n\n\n\n\n\n\n\n\n\n\n\n\nImplement your own survey experiment\n\n\n\n\n\n\nSurvey\n\n\nExperiment\n\n\nJavascript\n\n\nHTML\n\n\nPolitical science\n\n\nSociology\n\n\n\n\n\n\n\n\n\nMar 8, 2025\n\n\nCarlo Knotz\n\n\n\n\n\n\n\n\n\n\n\n\nMeasuring class with survey data\n\n\n\n\n\n\nSurvey data\n\n\nClass\n\n\nISSP\n\n\nPolitical science\n\n\nSociology\n\n\n\n\n\n\n\n\n\nMar 8, 2025\n\n\nCarlo Knotz\n\n\n\n\n\n\nNo matching items"
  }
]