{
  "hash": "8fb0e766c4ed716bc5f6a9da81f1d9e6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"How vulnerable are workers to globalization (and what effects does this have)?\"\nauthor: \"Carlo Knotz\"\ndate: \"2025-03-10\"\nbibliography: /Users/carloknotz/Documents/BibDesk_library/library.bib\nformat:\n  html:\n    toc: true\ncategories:\n  - Survey\n  - Globalization\n  - Indicator\n  - Merging\n  - Political science\n  - Sociology\n  - Economics\n---\n\n\n\n\n\n## The losers of globalization and trade\n\n'Globalization destroys jobs' or similar statements are often made by politicians or business and labor leaders, especially when new trade agreements are in the process of being negotiated. And indeed, even though free trade is generally beneficial to countries' economies as a whole, there are usually some workers who are negatively affected by increased competition from abroad [@Autoretal2013;@Heckscher1919;@Ohlin1933]. These negative economic effects can then also have further political and social effects, for example in the form of increased demands for social protection [@Walter2010], increased political polarization and conflict [@Autoretal2020], and rising rates of divorce and out-of-wedlock births [@Anellietal2024].\n\nTo be able to study these (and potentially other) effects, researchers obviously need some of measurement of how exposed and vulnerable workers are to the negative effects of trade and international competition. One way to measure this is with **indicators of 'offshoreability'** --- how easy or difficult is it to move the work done by people in different occupations to other countries? Different such indicators have been developed, but one that is relatively widely used are the indicators of offshoreability by Blinder & Krueger [-@Blinder2013]. They use a survey-based approach, where they ask workers about their perceptions of how easy it would be to move their jobs abroad and confirm this with a second survey of experts.\n\nThe rest of this post will show you how you can access the data, import them into `R`, and merge them with data from round 7 (2014) of the *European Social Survey* so that you can analyze how vulnerability to globalization affects people's attitudes and behavior.\n\n## Accessing the data\n\nLuckily, the Blinder/Krueger data are publicly available as part of the *replication data package* of a second (important) research article, which compares the effects of globalization and technological change on workers [@Goosetal2014]. Goos et al. have archived the research data they use in the *ICPSR* Data Archive: [https://doi.org/10.3886/E112846V1](https://doi.org/10.3886/E112846V1){target=\"_blank\"}. There, under *Data*, is the `task.dta` dataset, which contains the offshoreability scores and, as a bonus, also additional scores on how exposed workers are to losing their jobs to robots and other automated technology [from @Autoretal2003, and used by e.g., @Thewissen2019]. You can download the dataset for free, after a quick login.\n\n## Importing and merging the data with *ESS* data\n\n### Preparation\n\nMerging the data with *ESS* survey data is not as difficult as it might seem. The first step is to make sure that you also have access to *ESS* data (which can be downloaded for free from [europeansocialsurvey.org](https://www.europeansocialsurvey.org/){target=\"_blank\"}), and that both datasets are stored in your current *working directly* (\"folder\") so that `R` can directly find and import them. As mentioned above, the example here uses data from the 7th *ESS* round, so if you do not already have the data on your computer, quickly download them (in `Stata`/`.dta` format).\n\nIn `R`, we first load the `tidyverse` because it contains functions that we need to be able to work with and visualize the data. I am also setting the `ggplot` theme to `classic`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\ntheme_set(theme_classic())\n```\n:::\n\n\n\n\n\n### Data import\n\nThen we first import the *ESS* dataset with `haven`:\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ness7 <- haven::read_dta(\"ess7.dta\")\n```\n:::\n\n\n\n\n\nThe *ESS* is quite big, so to make things easier we select only a few variables that we want to work with:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ness7 %>% \n  select(idno,cntry,essround,isco08,gndr,agea,trstplt) -> ess7\n```\n:::\n\n\n\n\n\n* `idno`, `cntry`, and `essround` are \"administrative variables that are always good to keep\n* `isco08` is the respondents' occupation as measured by the 2008 version of the *International Standard Classification of Occupations* (*ISCO*; see also the other post on [measuring class](https://cknotz.github.io/getstuffdone_blog/posts/measuringclass/){target=\"_blank\"}). This is important because we will use this to link the *ESS* data with the vulnerability indicators\n* `agea`, `gndr`, and `trstplt` measure the respondents' age, gender, and their trust in politicans (on a 0-10 scale)\n\nNext, we import the vulnerability indicator scores -- **importantly*, we import the data without converting them directly\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nscores <- haven::read_dta(\"task.dta\")\n```\n:::\n\n\n\n\n\n### A quick exploration\n\nIt is time to take a quick look at the data to get a sense of what we are working with:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(scores)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 7\n  occupation           RTI_alm_isco_77     BK OFF1_ffl OFF2_ffl OFF3_ffl OFF_gms\n  <dbl+lbl>                      <dbl>  <dbl>    <dbl>    <dbl>    <dbl>   <dbl>\n1 12 [Corporate manag…          -0.747 -0.320   -1.43     0.798   -1.66   -0.593\n2 13 [Managers of sma…          -1.52  -0.634   -0.937    0.265   -1.19   -0.593\n3 21 [Physical, mathe…          -0.822  1.05     0.390    0.798   -1.48   -0.375\n4 22 [Life science an…          -1.00  -0.758   -1.92     0.544   -1.70   -0.639\n5 24 [Other professio…          -0.732  0.212   -0.892    1.56    -1.18   -0.513\n6 31 [Physical, mathe…          -0.397 -0.123    0.116   -0.393   -0.433  -0.272\n```\n\n\n:::\n:::\n\n\n\n\n\nYou might notice that every row in the dataset is an *occupation*: Row #1 is \"Corporate managers\", row #2 is \"Managers of small enterprises\", and so on. The first column (or variable) indicates the title of the occupation and a 2-digit code based on the 1988 version of the *International Standard Classifiation of Occupations* (*ISCO*) classification, where \"Corporate managers\" have the code `12`. The other variables are different indicators of vulnerability: \n\n* `RTI_alm_isco_77` is an indicator of vulnerability to automation (\"routine task intensity\") that was developed by Autor, Levy, and Murnane [-@Autoretal2003];\n* `BK` is the indicator of offshoreability by Blinder & Krueger [@Blinder2013];\n* `OFF1_ffl` to `OFF3_ffl` are alternative indicators of offshoreability by Firpo et al. [see their paper for details: @Firpoetal2011];\n* `OFF_gms` is the `BK` indicator in a normalized (\"rescaled\") version;\n\nLet's take a closer look at the `BK` indicator:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(scores$BK)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n-0.9985 -0.7585 -0.3203  0.0000  0.3996  2.3458 \n```\n\n\n:::\n:::\n\n\n\n\n\nThe indicator ranges from (almost) -1 to 2.35 and is centered on 0. Maybe more interesting is to see which occupations are particularly exposed to globalization. To see that, we reorder the data from the highest to lowest `BK` score and let `R` display the five highest-scoring occupations:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscores %>% \n  arrange(-BK) %>% \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 7\n  occupation            RTI_alm_isco_77    BK OFF1_ffl OFF2_ffl OFF3_ffl OFF_gms\n  <dbl+lbl>                       <dbl> <dbl>    <dbl>    <dbl>    <dbl>   <dbl>\n1 82 [Machine operator…           0.493 2.35     1.66    -1.02   0.993     3.18 \n2 73 [Precision, handi…           1.59  1.66     0.585   -0.564  0.00830  -0.616\n3 81 [Stationary plant…           0.323 1.59     0.990   -1.41   0.306     1.63 \n4 74 [Other craft and …           1.24  1.15     1.49    -0.453  1.07     -0.272\n5 21 [Physical, mathem…          -0.822 1.05     0.390    0.798 -1.48     -0.375\n6 41 [Office clerks]              2.24  0.400    0.301    1.26   0.913     1.21 \n```\n\n\n:::\n:::\n\n\n\n\n\nEvidently, typical manual or industrial occupations are the most vulnerable to globalization, but so are physcists and mathematicians!\n\nJust to complete the picture, we also look at the least exposed occupations:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscores %>% \n  arrange(BK) %>% \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 7\n  occupation           RTI_alm_isco_77     BK OFF1_ffl OFF2_ffl OFF3_ffl OFF_gms\n  <dbl+lbl>                      <dbl>  <dbl>    <dbl>    <dbl>    <dbl>   <dbl>\n1 83 [Drivers and mob…         -1.50   -0.999   0.399   -1.37     0.703   -0.628\n2 51 [Personal and pr…         -0.598  -0.937  -0.910    0.312    0.240   -0.639\n3 71 [Extraction and …         -0.185  -0.934   0.603   -1.23     0.0133  -0.593\n4 52 [Models, salespe…          0.0534 -0.893   0.0565   0.913    1.34    -0.639\n5 91 [Sales and servi…          0.0274 -0.808   0.729    0.0522   1.52    -0.375\n6 22 [Life science an…         -1.00   -0.758  -1.92     0.544   -1.70    -0.639\n```\n\n\n:::\n:::\n\n\n\n\n\nHere, it is again some manual workers (e.g., drivers and builders) but also salespersons and medical professionals, who obviously cannot do their jobs from abroad.\n\n### Adjusting the ISCO scores\n\nAs mentioned, the vulnerability score data are based on the ISCO-88 occupational classification, which is an older version of the ISCO-08 classifcation that is used to measure the occupation of *ESS* respondents. In addition, you may have noticed that the ISCO-scores in the *ESS* data have four numbers while those in the vulnerability data have two. The latter is because the vulnerability data use a simplified or less fine-grained version of the ISCO classification.\n\nThis means that to be able to merge the two datasets, we need to make sure that both use the same ISCO-classification so that we can match the different occupations, and that they are measured at the same level of detail.\n\nFortunately, there are methods to convert the scores back and forth between the different versions of the ISCO classification, and one of these is the `occupar` package (similar to the `DIGCLASS` package that is used in the the other post on [measuring class](https://cknotz.github.io/getstuffdone_blog/posts/measuringclass/){target=\"_blank\"}). In case you do not already have it installed, you can do so by running the following in your *Console*:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nremotes::install_github(\"DiogoFerrari/occupar\")\n```\n:::\n\n\n\n\n\nTechnically, we could either adjust the ISCO-08 scores in the *ESS* to match the ISCO-88 scores used in the other dataset, or the other way around, and the `occupar` package has functions to do both. The only important thing is that both datasets contain the same version of the ISCO classication.\n\nWe will use the `isco08to88()` function which, as the name suggests, converts ISCO-08 scores in the *ESS* to ISCO-88 scores, so that we can then match the *ESS* data and the vulnerability indicators along these scores and merge the two datasets. This function needs the numerical ISCO scores (not the titles of the occupations but the associated numbers). \n\nThis means that we need to extract the numerical scores from the ISCO-08 variable in the *ESS*. The following code does this and stores the converted scores into a new variable:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ness7 %>% \n  mutate(isco08_scores = as.numeric(isco08)) -> ess7\n```\n:::\n\n\n\n\n\nWe can take a quick look at the data to see if the conversion worked:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(ess7)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 8\n   idno cntry essround isco08                gndr    agea  trstplt isco08_scores\n  <dbl> <chr>    <dbl> <dbl+lbl>             <dbl+l> <dbl> <dbl+l>         <dbl>\n1     1 AT           7  7126 [Plumbers and … 1 [Mal… 51    3 [3]            7126\n2     2 AT           7  8312 [Railway brake… 1 [Mal… 67    3 [3]            8312\n3     3 AT           7 NA(a) [Not applicabl… 2 [Fem… 89    3 [3]              NA\n4     4 AT           7  7223 [Metal working… 1 [Mal… 32    0 [No …          7223\n5     5 AT           7  9321 [Hand packers]  2 [Fem… 56    0 [No …          9321\n6     6 AT           7  9321 [Hand packers]  2 [Fem… 67    0 [No …          9321\n```\n\n\n:::\n:::\n\n\n\n\n\nIndeed, the function correctly extracted the ISCO-08 score `7126` for \"Plumbers\" and saved it as `7126` in the new variable.\n\nThis means we can now convert the new scores to the ISCO-88 scheme:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ness7 %>% \n  mutate(isco88 = occupar::isco08to88(isco08_scores)) -> ess7\n```\n:::\n\n\n\n\n\nIf we take another quick look at the dataset, you can see the new ISCO-88 scores in the last column; you may also notice that the scores are slightly different (`9321` in the ISCO-08 classification is `9322` in the old one):\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(ess7)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 9\n   idno cntry essround isco08         gndr    agea  trstplt isco08_scores isco88\n  <dbl> <chr>    <dbl> <dbl+lbl>      <dbl+l> <dbl> <dbl+l>         <dbl>  <dbl>\n1     1 AT           7  7126 [Plumbe… 1 [Mal… 51    3 [3]            7126   7136\n2     2 AT           7  8312 [Railwa… 1 [Mal… 67    3 [3]            8312   8312\n3     3 AT           7 NA(a) [Not ap… 2 [Fem… 89    3 [3]              NA     NA\n4     4 AT           7  7223 [Metal … 1 [Mal… 32    0 [No …          7223   7223\n5     5 AT           7  9321 [Hand p… 2 [Fem… 56    0 [No …          9321   9322\n6     6 AT           7  9321 [Hand p… 2 [Fem… 67    0 [No …          9321   9322\n```\n\n\n:::\n:::\n\n\n\n\n\nThe almost last step in the data preparation is to \"simplify\" the new ISCO-88 scores in the *ESS* data to the same level of detail that the vulnerability data have. This is relatively easy, we simply \"extract\" the first two numbers of the four-number ISCO-scores.^[This works because the numbers reflect the hierarchical structure of the ISCO classification. If we cut off the last two numbers, we get to a higher level of aggregation. See [https://ilostat.ilo.org/methods/concepts-and-definitions/classification-occupation/#elementor-toc__heading-anchor-2](https://ilostat.ilo.org/methods/concepts-and-definitions/classification-occupation/#elementor-toc__heading-anchor-2){target=\"_blank\"} for details.) The following code does that:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ness7 %>% \n  mutate(isco88_2d = as.numeric(substr(as.character(isco88), 1,2))) -> ess7\n```\n:::\n\n\n\n\n\nIn human language, this code first converts the `isco88` variable to text (`as.character()`), then uses `substr()` to extract the first two items (\"from 1 to 2\"), and then converts the result back to numbers with `as.numeric()`.\n\nIf we take a look at the final result (with variables re-arranged so that we can see them next to each other), we can confirm that all worked as it should:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ness7 %>% \n  relocate(idno,cntry,essround,isco08,isco88,isco88_2d) %>% \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 10\n   idno cntry essround isco08             isco88 isco88_2d gndr    agea  trstplt\n  <dbl> <chr>    <dbl> <dbl+lbl>           <dbl>     <dbl> <dbl+l> <dbl> <dbl+l>\n1     1 AT           7  7126 [Plumbers a…   7136        71 1 [Mal… 51    3 [3]  \n2     2 AT           7  8312 [Railway br…   8312        83 1 [Mal… 67    3 [3]  \n3     3 AT           7 NA(a) [Not applic…     NA        NA 2 [Fem… 89    3 [3]  \n4     4 AT           7  7223 [Metal work…   7223        72 1 [Mal… 32    0 [No …\n5     5 AT           7  9321 [Hand packe…   9322        93 2 [Fem… 56    0 [No …\n6     6 AT           7  9321 [Hand packe…   9322        93 2 [Fem… 67    0 [No …\n# ℹ 1 more variable: isco08_scores <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n\nFinally, we quickly convert the ISCO-88 scores in the vulnerability dataset to a pure numerical score. We also give it the same name as the corresponding variable in the *ESS* dataset to make merging the two datasets more straightforward:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscores %>% \n  mutate(isco88_2d = as.numeric(occupation)) -> scores\n```\n:::\n\n\n\n\n\n### Merging the datasets\n\nMerging two datasets can seem a bit daunting to beginners, but it is actually quite easy. The `dplyr` package has functions for so-called \"mutating joins\" (see [https://dplyr.tidyverse.org/reference/mutate-joins.html](https://dplyr.tidyverse.org/reference/mutate-joins.html){target=\"_blank\"}), which in essence simply merge two datasets along one (or potentially more) \"identifier\" variable. As long as one has one (or more) variables that can directly match observations between datasets -- which in our case is the two-number ISCO-88 score -- one can use these functions to merge two datasets.\n\nUsually, the correct function to use to merge datasets is `left_join()`. In our case, we want to join the *ESS* dataset with the vulnerability scores dataset along the two-digit ISCO-88 scores, so we specify this in our code:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ness7 %>% \n  left_join(scores, by = \"isco88_2d\") -> ess7\n```\n:::\n\n\n\n\n\nAnd that is it.\n\nIf we take a look at relevant variables in the final dataset, we can see the vulnerability scores matched to th *ESS* data:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ness7 %>% \n  select(idno,isco08,isco88_2d,BK,RTI_alm_isco_77) %>% \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n   idno isco08                                  isco88_2d     BK RTI_alm_isco_77\n  <dbl> <dbl+lbl>                                   <dbl>  <dbl>           <dbl>\n1     1  7126 [Plumbers and pipe fitters]              71 -0.934          -0.185\n2     2  8312 [Railway brake, signal and switc…        83 -0.999          -1.50 \n3     3 NA(a) [Not applicable]                         NA NA              NA    \n4     4  7223 [Metal working machine tool sett…        72 -0.451           0.457\n5     5  9321 [Hand packers]                           93 -0.658           0.449\n6     6  9321 [Hand packers]                           93 -0.658           0.449\n```\n\n\n:::\n:::\n\n\n\n\n\nYou see that respondent with ID number 1 (the plumber) has a `BK` offshorability score of -9.34 and also an automation-vulnerability (RTI) score of -0.185.\n\nAs a last step, we convert the final dataset to the traditional `R` format so that it is easier to work with later:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ness7 <- labelled::unlabelled(ess7)\n```\n:::\n\n\n\n\n\n## Vulnerability to globalization, gender, age, and political trust\n\nWith the merged data in hand, you can now do lots of different analyses. For example, you can use the vulnerabiility scores in a regression analysis to see if they are related to some other variable you are interested in.\n\nJust to illustrate this, we will do a few quick visual analyses of the relationship between the offshoreability scores and gender, age, and political trust.\n\nFor example, let's see if men or women are on average more exposed to globalization:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ness7 %>% \n  group_by(gndr) %>% \n  summarise(avg_BK = mean(BK, na.rm = T)) %>% \n  drop_na() %>%\n  ggplot(aes(x = gndr, y = avg_BK)) +\n    geom_col()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n\n\n\nThere is a tiny difference: Women are very slightly less exposed to globalization than men.\n\nNext, we can see if there is a relation to age. To do that, we can calculate the average age in a given occupational group and relate that average age to the vulnerability score in a scatterplot:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ness7 %>% \n  group_by(isco88_2d) %>% \n  summarise(avg_age = mean(agea, na.rm = T),\n            avg_BK = mean(BK, na.rm = T)) %>% \n  drop_na() %>% \n  ggplot(aes(x = avg_age, y = avg_BK)) +\n    geom_point() +\n    geom_smooth(method = \"lm\", color = \"grey\", linetype = \"dashed\", se = F)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n\n\n\nThere does seem to be a positive relationship: Occupations where workers are older are also more exposed to globalization.\n\nFinally, let's see if exposure to globalization has political effects by testing if there is a relationship to trust in politicians. We do this with a box plot:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ness7 %>% \n  ggplot(aes(x = trstplt, y = BK)) +\n    geom_boxplot()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 8011 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n\n\n\nAt least based on this (admittedly) very quick and superficial look at the data, there does not seem to be a strong relationship.\n\n## Next steps\n\nEven if there is not link to political trust, maybe you can think of other variables that are measured in the *ESS* that globalization vulnerability could have an effect on? And maybe you can even think of macro-level variables that could make these effects stronger or weaker (and then use [the other post](https://cknotz.github.io/getstuffdone_blog/posts/compa_survey/){target=\"_blank\"} to compare the effects of globalization vulnerability between two or more selected countries)?\n\nFinally, you can also merge the vulnerability scores to other survey datasets such as the *ISSP* or the *Eurobarometer* so long as the survey dataset contains ISCO occupation scores.\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}